@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 my-4">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">Work allocation  </h5>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="ProgramID">Audit Type</label>
                    @Html.DropDownList("AuditID", (List<SelectListItem>)ViewBag.AuditTypeList, "Select AditType", new { @class = "custom-select", id = "AuditID", onchange = "AuditType()" })
                </div>

                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Location</label>
                    @Html.DropDownList("LocationID", (List<SelectListItem>)ViewBag.LocationName, "Select Location", new { @class = "custom-select", id = "LocationID", })
                </div>
                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Role</label>
                    @Html.DropDownList("RoleID", (List<SelectListItem>)ViewBag.RoleList, "Select Role", new { @class = "custom-select", id = "RoleID", })
                </div>
                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Program</label>
                    @Html.DropDownList("ProgramID", (List<SelectListItem>)ViewBag.Process, "Select Program", new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" })
                </div>
                <div class="form-group col-md-6">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select" onchange="onSubProgramChange()">
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Sample Size</label>
                    <input type="text" id="SamplingSize" class="custom-select" readonly />
                </div>

            </div>
        </div>
    </div>
</div>



<div class="col-md-12 my-4">
    <div class="card shadow">
        <div class="card-body">
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Agent HC</label>
                    <input type="text" id="Agent" class="custom-select" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">QA HC</label>
                    <input type="text" id="qa" class="custom-select" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">Ops TL HC</label>
                    <input type="text" id="tl" class="custom-select" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">Define Target/Agent/Month</label>
                    <select name="target" id="target" class="custom-select" onchange="OnChnageMonth(this);">
                        <option value="">Select Target</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                        <option value="10">10</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">No Of Working Days</label>
                    <input type="number" id="NoOfWorking" class="custom-select" onkeyup="handleWCChange(this)" />
                </div>
            </div>
        </div>
    </div>
</div>





<div class="col-md-12 my-4" id="R_Adit" style="display:none">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title"> Audit </h5>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Active Head count</label>
                    <input type="number" id="R_G_Active_Head_count" class="custom-select" onkeyup="handleHCChange(this)" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">Audit sampling/Month</label>
                    <input type="text" id="R_G_Audit_sampling_Month" class="custom-select" readonly />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">#Of QA</label>
                    <input type="text" id="R_G_of-qa" class="custom-select" onkeyup="handleQAInputChange(this)" />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Monthly  target</label>
                    <input type="text" id="R_G_Per_QA_Monthly_target" class="custom-select" readonly />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Daily Traget</label>
                    <input type="text" id="R_G_Per_QA_Daily_Traget" class="custom-select" readonly />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-12 my-4" id="T_Adit" style="display:none">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">Transformation Audit </h5>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Active Head count</label>
                    <input type="number" id="t_Audit_Active_Head_count" class="custom-select" onkeyup="handleHCChange(this)" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">Audit sampling/Month</label>
                    <input type="text" id="t_Audit_Audit_sampling_Month" class="custom-select" readonly />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">#Of QA</label>
                    <input type="text" id="t_Audit_of-qa" class="custom-select" onkeyup="handleQAInputChange(this)" />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Target (Manual)</label>
                    <input type="text" id="t_Audit_Target_Manual" class="custom-select" />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Monthly  target</label>
                    <input type="text" id="t_Audit_Per_QA_Monthly_target" class="custom-select" readonly />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Daily Traget</label>
                    <input type="text" id="t_Audit_Per_QA_Daily_Traget" class="custom-select" readonly />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-md-12 my-4" id="H_R_Adit" style="display:none">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">Hygiene & Risk Audit </h5>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Active Head count</label>
                    <input type="text" id="H_R_Audit_Active_Head_count" class="custom-select" onkeyup="handleHCChange(this)" />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">Audit sampling/Month</label>
                    <input type="text" id="H_R_Audit_Audit_sampling_Month" class="custom-select" readonly />
                </div>

                <div class="form-group col-md-6">
                    <label for="SamplingSize">#Of QA</label>
                    <input type="text" id="H_R_Audit_of-qa" class="custom-select" onkeyup="handleQAInputChange(this)" />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Target (Manual)</label>
                    <input type="text" id="H_R_Audit_Target_Manual" class="custom-select" />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Monthly  target</label>
                    <input type="text" id="H_R_Audit_Per_QA_Monthly_target" class="custom-select" readonly />
                </div>
                <div class="form-group col-md-6">
                    <label for="SamplingSize">Per QA Daily Traget</label>
                    <input type="text" id="H_R_Audit_Per_QA_Daily_Traget" class="custom-select" readonly />
                </div>
            </div>
        </div>
    </div>
</div>


<div class="col-md-12 my-4 text-center">
    <button type="button" class="btn btn-primary" onclick="submitForm()">Submit</button>
</div>

<script>
    document.getElementById("qa").addEventListener("input", function () {
        if (document.getElementById("T_Adit").style.display !== "none") {

            document.getElementById("t_Audit_of-qa").value = this.value;
        }
        if (document.getElementById("H_R_Adit").style.display !== "none") {

            document.getElementById("H_R_Audit_of-qa").value = this.value;
        }
        if (document.getElementById("R_Adit").style.display !== "none") {
            document.getElementById("R_G_of-qa").value = this.value;
            }
        handleQAInputChange(this);  
    });
</script>
<script>


    function handleWCChange(input) {

        if (document.getElementById("T_Adit").style.display !== "none") {

            document.getElementById("t_Audit_Per_QA_Daily_Traget").value = document.getElementById("t_Audit_Per_QA_Monthly_target").value / input.value
        }
        if (document.getElementById("H_R_Adit").style.display !== "none") {
       
            document.getElementById("H_R_Audit_Per_QA_Daily_Traget").value = document.getElementById("H_R_Audit_Per_QA_Monthly_target").value / input.value
        }
        if (document.getElementById("R_Adit").style.display !== "none") {
            document.getElementById("R_G_Per_QA_Daily_Traget").value = document.getElementById("R_G_Per_QA_Monthly_target").value / input.value

        }
    }
    function handleQAInputChange(input) {
       
     
        if (document.getElementById("T_Adit").style.display !== "none") {
           
            document.getElementById("t_Audit_Per_QA_Monthly_target").value = (document.getElementById("t_Audit_Active_Head_count").value * document.getElementById("t_Audit_Audit_sampling_Month").value / input.value);
            document.getElementById("t_Audit_Per_QA_Daily_Traget").value = ( document.getElementById("t_Audit_Per_QA_Monthly_target").value) / document.getElementById("NoOfWorking").value
        }
        if (document.getElementById("H_R_Adit").style.display !== "none") {
            document.getElementById("H_R_Audit_Per_QA_Monthly_target").value = (document.getElementById("H_R_Audit_Active_Head_count").value * document.getElementById("H_R_Audit_Audit_sampling_Month").value) / input.value;
            document.getElementById("H_R_Audit_Per_QA_Daily_Traget").value = ( document.getElementById("H_R_Audit_Per_QA_Monthly_target").value) / document.getElementById("NoOfWorking").value
        }
        if (document.getElementById("R_Adit").style.display !== "none") {
            document.getElementById("R_G_Per_QA_Monthly_target").value = (document.getElementById("R_G_Active_Head_count").value * document.getElementById("R_G_Audit_sampling_Month").value) / input.value;
            document.getElementById("R_G_Per_QA_Daily_Traget").value = ( document.getElementById("R_G_Per_QA_Monthly_target").value) / document.getElementById("NoOfWorking").value
        }
    }
    function handleHCChange(input) {

        if (document.getElementById("T_Adit").style.display !== "none") {
            document.getElementById("t_Audit_Per_QA_Monthly_target").value = (input.value * document.getElementById("t_Audit_Audit_sampling_Month").value )/ document.getElementById("t_Audit_of-qa").value;
            document.getElementById("t_Audit_Per_QA_Daily_Traget").value = document.getElementById("t_Audit_Per_QA_Monthly_target").value / document.getElementById("NoOfWorking").value
        }
        if (document.getElementById("H_R_Adit").style.display !== "none") {
            document.getElementById("H_R_Audit_Per_QA_Monthly_target").value = (input.value * document.getElementById("H_R_Audit_Audit_sampling_Month").value) /document.getElementById("H_R_Audit_of-qa").value;
            document.getElementById("H_R_Audit_Per_QA_Daily_Traget").value = document.getElementById("H_R_Audit_Per_QA_Monthly_target").value / document.getElementById("NoOfWorking").value
        }
        if (document.getElementById("R_Adit").style.display !== "none") {
            document.getElementById("R_G_Per_QA_Monthly_target").value = (input.value * document.getElementById("R_G_Audit_sampling_Month").value)/ document.getElementById("R_G_of-qa").value;
            document.getElementById("R_G_Per_QA_Daily_Traget").value = document.getElementById("R_G_Per_QA_Monthly_target").value / document.getElementById("NoOfWorking").value

        }
    }
    function OnChnageMonth(months) {
        
        var SamplingMonth = months.value ;
        if (document.getElementById("T_Adit").style.display !== "none") {
           
            document.getElementById("t_Audit_Audit_sampling_Month").value = SamplingMonth;
            document.getElementById("t_Audit_Active_Head_count").value = 0;
        }
        if (document.getElementById("H_R_Adit").style.display !== "none") {
          
            document.getElementById("H_R_Audit_Audit_sampling_Month").value = SamplingMonth;
            document.getElementById("H_R_Audit_Active_Head_count").value = 0;
        }
        if (document.getElementById("R_Adit").style.display !== "none") {
           
            document.getElementById("R_G_Audit_sampling_Month").value = SamplingMonth;
            document.getElementById("R_G_Active_Head_count").value = 0;
        }
    }
    function AuditType() {
        document.getElementById("LocationID").selectedIndex = 0;
        document.getElementById("RoleID").selectedIndex = 0;
        document.getElementById("ProgramID").selectedIndex = 0;
        document.getElementById("SUBProgramID").innerHTML = "";
        document.getElementById("target").selectedIndex = 0;


        let inputFields = document.querySelectorAll("input");
        inputFields.forEach(field => {
            field.value = "";
        });
        var Audit = document.getElementById("AuditID").value;
        document.getElementById("T_Adit").style.display = "none";
        document.getElementById("H_R_Adit").style.display = "none";
        document.getElementById("R_Adit").style.display = "none";

        if (Audit == 1) {
            document.getElementById("R_Adit").style.display = "block";
        }
        if (Audit == 2) {
            document.getElementById("T_Adit").style.display = "block";
        }
        if (Audit == 3) {
            document.getElementById("H_R_Adit").style.display = "block";

        }
        if (Audit == 4) {
            document.getElementById("R_Adit").style.display = "block";
        }
    }
    function submitForm() {
        var isValid = true;
        var formData = {};

        var auditType = document.getElementById("AuditID");
        var location = document.getElementById("LocationID");
        var role = document.getElementById("RoleID");
        var program = document.getElementById("ProgramID");
        var subProgram = document.getElementById("SUBProgramID");
        var samplingSize = document.getElementById("SamplingSize");
        var agentHC = document.getElementById("Agent");
        var qaHC = document.getElementById("qa");
        var opsTLHC = document.getElementById("tl");
        var target = document.getElementById("target");
        var NoOfWorking = document.getElementById("NoOfWorking");

        validateField(auditType);
        validateField(location);
        validateField(role);
        validateField(program);
        validateField(subProgram);
        validateField(samplingSize);
        validateField(agentHC);
        validateField(qaHC);
        validateField(opsTLHC);
        validateField(target);
        validateField(NoOfWorking);

        function validateField(field) {
            if (field && field.closest("div.card").style.display !== "none") {
                if (field.value.trim() === "") {
                    isValid = false;
                    field.style.border = "1px solid red";
                } else {
                    field.style.border = "";
                    formData[field.id] = field.value;
                }
            }
        }
        function ClearFeilds() {
            document.getElementById("LocationID").selectedIndex = 0;
            document.getElementById("RoleID").selectedIndex = 0;
            document.getElementById("ProgramID").selectedIndex = 0;
            document.getElementById("SUBProgramID").innerHTML = "";
            document.getElementById("target").selectedIndex = 0;


            let inputFields = document.querySelectorAll("input");
            inputFields.forEach(field => {
                field.value = "";
            });
            var Audit = document.getElementById("AuditID").value;
            document.getElementById("T_Adit").style.display = "none";
            document.getElementById("H_R_Adit").style.display = "none";
            document.getElementById("R_Adit").style.display = "none";
        }
        function validateFieldDynamic(field) {
            if (field && field.closest("div.card").style.display !== "none") {
                if (field.value.trim() === "") {
                    isValid = false;
                    field.style.border = "1px solid red";
                } else {
                    field.style.border = "";
                }
            }
        }

        if (document.getElementById("T_Adit").style.display !== "none") {
            validateFieldDynamic(document.getElementById("t_Audit_Active_Head_count"));
            validateFieldDynamic(document.getElementById("t_Audit_Audit_sampling_Month"));
            validateFieldDynamic(document.getElementById("t_Audit_of-qa"));
            validateFieldDynamic(document.getElementById("t_Audit_Target_Manual"));
            validateFieldDynamic(document.getElementById("t_Audit_Per_QA_Monthly_target"));
            validateFieldDynamic(document.getElementById("t_Audit_Per_QA_Daily_Traget"));

            formData["Audit_Active_Head_count_ALL"] = document.getElementById("t_Audit_Active_Head_count").value;
            formData["Audit_Audit_sampling_Month_ALL"] = document.getElementById("t_Audit_Audit_sampling_Month").value;
            formData["Audit_of-qa_ALL"] = document.getElementById("t_Audit_of-qa").value;
            formData["Audit_Target_Manual_ALL"] = document.getElementById("t_Audit_Target_Manual").value;
            formData["Audit_Per_QA_Monthly_target_ALL"] = document.getElementById("t_Audit_Per_QA_Monthly_target").value;
            formData["Audit_Per_QA_Daily_Traget_ALL"] = document.getElementById("t_Audit_Per_QA_Daily_Traget").value;
        }

        if (document.getElementById("H_R_Adit").style.display !== "none") {
            validateFieldDynamic(document.getElementById("H_R_Audit_Active_Head_count"));
            validateFieldDynamic(document.getElementById("H_R_Audit_Audit_sampling_Month"));
            validateFieldDynamic(document.getElementById("H_R_Audit_of-qa"));
            validateFieldDynamic(document.getElementById("H_R_Audit_Target_Manual"));
            validateFieldDynamic(document.getElementById("H_R_Audit_Per_QA_Monthly_target"));
            validateFieldDynamic(document.getElementById("H_R_Audit_Per_QA_Daily_Traget"));

            formData["Audit_Active_Head_count_ALL"] = document.getElementById("H_R_Audit_Active_Head_count").value;
            formData["Audit_Audit_sampling_Month_ALL"] = document.getElementById("H_R_Audit_Audit_sampling_Month").value;
            formData["Audit_of-qa_ALL"] = document.getElementById("H_R_Audit_of-qa").value;
            formData["Audit_Target_Manual_ALL"] = document.getElementById("H_R_Audit_Target_Manual").value;
            formData["Audit_Per_QA_Monthly_target_ALL"] = document.getElementById("H_R_Audit_Per_QA_Monthly_target").value;
            formData["Audit_Per_QA_Daily_Traget_ALL"] = document.getElementById("H_R_Audit_Per_QA_Daily_Traget").value;
        }

        if (document.getElementById("R_Adit").style.display !== "none") {
            validateFieldDynamic(document.getElementById("R_G_Active_Head_count"));
            validateFieldDynamic(document.getElementById("R_G_Audit_sampling_Month"));
            validateFieldDynamic(document.getElementById("R_G_of-qa"));

            validateFieldDynamic(document.getElementById("R_G_Per_QA_Monthly_target"));
            validateFieldDynamic(document.getElementById("R_G_Per_QA_Daily_Traget"));

            formData["Audit_Active_Head_count_ALL"] = document.getElementById("R_G_Active_Head_count").value;

            formData["Audit_Audit_sampling_Month_ALL"] = document.getElementById("R_G_Audit_sampling_Month").value;
            formData["Audit_of-qa_ALL"] = document.getElementById("R_G_of-qa").value;
            formData["Audit_Per_QA_Monthly_target_ALL"] = document.getElementById("R_G_Per_QA_Monthly_target").value;
            formData["Audit_Per_QA_Daily_Traget_ALL"] = document.getElementById("R_G_Per_QA_Daily_Traget").value;
        }

        if (!isValid) {
            alert("Please fill in all required fields.");
            return;
        }

        $.ajax({
            url: "/Sampling/SubmitData",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(formData),
            success: function (response) {
                alert(response.message);
                console.log(response);
            },
            error: function (xhr, status, error) {
                alert("Error submitting data: " + error);
            }
        });

        ClearFeilds();
    }


    function onSubProgramChange() {

        var selectedValue = document.getElementById("SUBProgramID").value;

        if (selectedValue === '') {
            alert('Please select a valid Sub Program Name.');
            document.getElementById("SamplingSize").value = 0;
        } else {
            console.log("Selected Sub Program ID:", selectedValue);


            $.ajax({
                type: "POST",
                url: "/Sampling/GetSamplingCountwithSubProcess",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ SUBProcessID: selectedValue, ProcessID: $('#ProgramID').val() }),
                success: function (response) {
                    console.log(response);
                    $('#SamplingSize').val(response.sampleSize);
                    $('#qa').val(response.qacount);
                    $('#tl').val(response.tlcount);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
    }
    function onProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        $('#SamplingSize').val(0);

        if (programId == "") {
            alert("Please Select Program first");
            return;
        }
        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Admin/GetSUBProcessList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                var dropdown = $('#SUBProgramID');
                dropdown.empty();
                dropdown.append('<option value="">Select Sub Process</option>');
                response.proces.forEach(function (item) {
                    dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                });
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });

        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Sampling/GetSamplingCount",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var data = JSON.stringify(response);
                console.log(data);

                $('#SamplingSize').val(response.sampleSize);
                $('#qa').val(response.qacount);
                $('#tl').val(response.tlcount);
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });


    }


</script>


