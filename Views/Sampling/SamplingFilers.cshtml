@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-expand-lg navbar-light bg-light" style="padding: 10px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); height: 60px; overflow: visible; position: relative;    height: 105px;">
    <div class="navbar-nav ml-auto" style="display: flex; gap: 10px; align-items: center;">
        <div style="width:150px; justify-items:center">
            <label> AHT Min </label>
            <div class="row" style="display: flex; justify-content: center; align-items: center; width: 100%; margin-bottom: 5px;">
                <input type="range" class="form-range range-slider" id="ahtMin" min="0" max="300" step="1"
                       oninput="updateRangeValue('ahtMin')"
                       style="width: 100%; max-width: 300px;">
            </div>
            <div class="row" style="display: flex; justify-content: center; align-items: center;">
                <span id="ahtMinValue" style="font-weight: bold; padding: 0 5px;">10</span>
            </div>
        </div>
        <div style="width:150px; justify-items:center">
            <label> AHT Max </label>
            <div class="row" style="display: flex; justify-content: center; align-items: center; width: 100%; margin-bottom: 5px;">
                <input type="range" class="form-range range-slider" id="ahtMax" min="0" max="300" step="1"
                       oninput="updateRangeValue('ahtMax')"
                       style="width: 100%; max-width: 300px;">
            </div>
            <div class="row" style="display: flex; justify-content: center; align-items: center;">
                <span id="ahtMaxValue" style="font-weight: bold; padding: 0 5px;">300</span>
            </div>
        </div>
      

        <div style="width:230px;">
            <label>Program Name</label>
            @Html.DropDownList("ProgramID", (List<SelectListItem>)ViewBag.ProcessList, "Select Program", new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" })
        </div>

        <div style="width:230px;">
            <label>Sub Program Name</label>
            <select name="SUBProgramID" id="SUBProgramID" class="custom-select">
                <option value="">Select Sub Process</option>
            </select>
        </div>
        <div style="width:230px;">
            <label > Dispositions</label>
            <select id="dispositionSelect" class="custom-select " multiple size="1" style="height: 37px; overflow: hidden; transition: height 0.3s ease;">
                <option value="*"  style="background-color: white;">Select Dispositions</option>
                <option value="*" style="background-color: white;"></option>
                <option value="3" style="background-color: white;">3</option>
                <option value="4" style="background-color: white;">4</option>
                <option value="5" style="background-color: white;">5</option>
                <option value="3" style="background-color: white;">3</option>
                <option value="4" style="background-color: white;">4</option>
                <option value="5" style="background-color: white;">5</option>
                <option value="3" style="background-color: white;">3</option>
                <option value="4" style="background-color: white;">4</option>
                <option value="5" style="background-color: white;">5</option>
                <option value="3" style="background-color: white;">3</option>
                <option value="4" style="background-color: white;">4</option>
                <option value="5" style="background-color: white;">5</option>
                <option value="3" style="background-color: white;">3</option>
                <option value="4" style="background-color: white;">4</option>
                <option value="5" style="background-color: white;">5</option>
            </select>
        </div>
        <div id="san">
            <button id="applyFilter" class="btn btn-primary" style="margin-top: 28px">Apply Filter</button>
        </div>
    </div>
</nav>



<script src="~/js/jquery.min.js"></script>



<script>
    document.getElementById('dispositionSelect').addEventListener('mouseover', function () {
        this.style.overflow = 'visible';
        this.style.height = 'auto';
    });
    document.getElementById('dispositionSelect').addEventListener('mouseout', function () {
        this.style.overflow = 'hidden';
        this.style.height = '37px';
    });
</script>
<script>
    function updateRangeValue(id) {
        document.getElementById(id + "Value").textContent = document.getElementById(id).value;
    }

    document.getElementById("applyFilter").addEventListener("click", function () {
        let ahtMin = document.getElementById("ahtMin").value;
        let ahtMax = document.getElementById("ahtMax").value;
        let disposition = document.getElementById("dispositionSelect");
        let Process = document.getElementById("ProgramID").value;
        let SubProcess = document.getElementById("SUBProgramID").value;
        let selectedDispositions = Array.from(disposition.selectedOptions).map(option => option.value);
    
        if (ahtMin==="0") {
            alert("Please Select AHT MIN");
            return;
        }
        if (ahtMax === "0") {
            alert("Please Select AHT MAX");
            return;
        }
        
        if (selectedDispositions === "Select Dispositions") {
            alert("Please Select Disposition");
            return;
        }

        if (Process === null || Process === "") {
            alert("Please Select Program");
            return;
        }
     
        if (SubProcess === null || SubProcess === "") {
            alert("Please Select SubProcess");
            return;
        }
        applyFilter(ahtMin, ahtMax, selectedDispositions, Process, SubProcess);


      
    });


    function applyFilter(ahtMin, ahtMax, selectedDispositions, Process, SubProcess) {
        let ahtMinStr = String(ahtMin);
        let ahtMaxStr = String(ahtMax);
        let dispositionStr = selectedDispositions.join(",");
        let processStr = String(Process);
        let subProcessStr = String(SubProcess);
        if (dispositionStr.includes("Select Dispositions")) {
            alert("Please select a valid disposition before applying filters.");
            return; 
        }

        if (dispositionStr.includes("*")) {
            alert("Please select a valid disposition before applying filters.");
            return; 
        }
        
       
        $.ajax({
            type: "POST",
            url: "/Sampling/AssignFiltersAginProcess",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({
                ahtMin: ahtMinStr,
                ahtMax: ahtMaxStr,
                disposition: dispositionStr,
                Process: processStr,
                SubProcess: subProcessStr
            }),
            success: function (response) {
                alert(response.message);
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });
       
   
    }
    function onProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Admin/GetSUBProcessList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                var dropdown = $('#SUBProgramID');
                dropdown.empty();
                dropdown.append('<option value="">Select Process</option>');
                response.proces.forEach(function (item) {
                    dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                });
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });

    }

    document.getElementById('filterButton').addEventListener('click', function () {
        const filterOptions = document.getElementById('filterOptions');

        if (filterOptions.style.display === 'none') {
            filterOptions.style.display = 'block'; 
         
        }
    });

  
</script>
