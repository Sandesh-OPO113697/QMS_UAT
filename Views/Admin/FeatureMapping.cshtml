@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["RoleCreate"] != null)
{
    <div class="alert alert-primary" role="alert">
        <span class="fe fe-alert-circle fe-16 mr-2">

        </span>
    </div>
}

<form class="AdminCreateio">
    <div class="col-md-12 my-4">
        <div class="card shadow">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label for="custom-select-1">Select Role</label>
                            @Html.DropDownList("User_ID", (List<SelectListItem>)ViewBag.UserList, "Select Role", new { @class = "custom-select", id = "ID", onchange = "OnRoleChange(this)" })
                            <input type="hidden" id="UserName" name="UserName" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label for="custom-select-1">Select Feature</label>
                            @foreach (var item in ViewBag.Feature as List<FeatureWithSubFeatures>)
                            {
                                <div>

                                    <input type="checkbox"
                                           name="selectedProcesses"
                                           value="@item.FeatureValue"
                                           id="feature-@item.FeatureValue"
                                           class="process-checkbox"
                                           onchange="onFeatureCheckboxChange(this)" />
                                    <label for="feature-@item.FeatureValue">@item.FeatureName</label>


                                    <div class="sub-features-container" id="subFeatures-@item.FeatureValue" style="margin-left: 20px; display: none;">
                                        @foreach (var subFeature in item.SubFeatures)
                                        {
                                            <div>
                                                <input type="checkbox"
                                                       name="subFeature-@item.FeatureValue"
                                                       value="@subFeature.SubFeatureValue"
                                                       id="subFeature-@subFeature.SubFeatureValue"
                                                       class="sub-feature-checkbox" />
                                                <label for="subFeature-@subFeature.SubFeatureValue">@subFeature.SubFeatureName</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-2 my-4">
        <div class="card-body d-flex justify-content-center align-items-center">
            <button class="btn btn-primary" type="submit">Submit</button>
        </div>
    </div>
</form>

<script src="~/js/jquery.min.js"></script>

<script>

    function onFeatureCheckboxChange(checkbox) {
        var featureId = checkbox.id.split('-')[1];
        var isChecked = checkbox.checked;
        const subFeatureCheckboxes = document.querySelectorAll(`input[name="subFeature-${featureId}"]`);
        if (subFeatureCheckboxes.length > 0) {
            subFeatureCheckboxes.forEach((subFeatureCheckbox) => {
                subFeatureCheckbox.checked = isChecked;
            });
            console.log(
                `All checkboxes with name 'subFeature-${featureId}' are now ${isChecked ? "checked" : "unchecked"}.`
            );
        } else {
            console.log(`No checkboxes found with name 'subFeature-${featureId}'.`);
        }
        if (isChecked) {

            $("#subFeatures-" + featureId).show();

        } else {
            $("#subFeatures-" + featureId).hide();
        }
    }

    window.OnRoleChange = function (dropdown) {
        var role = dropdown.value;
        $(".sub-features-container").hide();
        $(".process-checkbox").prop('checked', false);
        $(".sub-feature-checkbox").prop('checked', false);
        $.ajax({
            url: '@Url.Action("GetFeatureByRole", "Admin")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ ID: role }),
            success: function (response) {
                const filteredData = response.map(item => ({
                    text: item.text,
                    value: item.value
                }));


                filteredData.forEach(function (item) {

                    $('#subFeature-' + item.value).prop('checked', true);
                    let SubFetureId = item.value

                    var featureData = @Html.Raw(Json.Serialize(ViewBag.Feature));
                    console.log(featureData);
                    featureData.forEach(function (feature) {

                        feature.subFeatures.forEach(function (subFeature) {
                            if (subFeature.subFeatureValue == SubFetureId) {
                                $('#subFeatures-' + feature.featureValue).show();
                                $('#feature-' + feature.featureValue).prop('checked', true);
                            }

                        });
                    });
                });


            },
            error: function (xhr, status, error) {
                console.error("Error fetching sub-features for the role:", error);
                alert('Failed to fetch sub-features. Please try again.');
            }
        });
    };



</script>




<script type="text/javascript">
    $(document).ready(function () {
        $(".AdminCreateio").submit(function (e) {
            e.preventDefault();
            const userId = $("#ID").val();
            const userName = $("#UserName").val();


            const selectedFeatures = [];
            $(".process-checkbox:checked").each(function () {
                selectedFeatures.push($(this).val());
            });


            const selectedSubFeatures = [];
            $(".sub-feature-checkbox:checked").each(function () {
                selectedSubFeatures.push($(this).val());
            });


            const data = {
                UserId: userId,
                UserName: userName,
                FeatureList: selectedFeatures,
                SubFeatureList: selectedSubFeatures
            };


            $.ajax({
                url: '/Admin/SubmitFeatureSelection',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    if (response.success) {
                        alert('Features submitted successfully!');
                        console.log('Response:', response);
                        location.reload();
                    } else {
                        alert('Failed to submit features. ' + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                    alert('Failed to submit features. Please try again.');
                }
            });
        });


        document.getElementById("ID").addEventListener("change", function () {
            var userName = this.options[this.selectedIndex].text;
            document.getElementById("UserName").value = userName;
        });
    });

</script>