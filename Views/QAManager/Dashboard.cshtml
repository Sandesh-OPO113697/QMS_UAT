@model DisputeFeedbackViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

 

<div class="card shadow mb-4">
    <div class="card-header">
        <strong class="card-title">Pending Feedback Dispute</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Transaction ID</th>
                    <th>AgentID</th>
                    <th>TL Name</th>
                    <th>Monitor By</th>
                    <th>View</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.DisputeList != null && Model.DisputeList.Any())
                {
                    @foreach (var item in Model.DisputeList)
                    {
                        <tr>
                            <td>@item.TransactionID</td>
                            <td>@item.AgentID</td>
                            <td>@item.TLName</td>
                            <td>@item.MonitorBy</td>
                            <td>
                                <a href="/QAManager/EditAgentFeedBack?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">
                                    View
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">No pending feedback.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="card-header">
        <strong class="card-title">ZT Cases QA Manager View</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ProgramID</th>
                    <th>SubProgramID</th>
                    <th>AgentName</th>
                    <th>EmployeeID</th>
                    <th>AgentSupervsor</th>
                    <th>ZTRaisedBy</th>
                    <th>ZTRaisedDate</th>
                    <th>TransactionDate</th>
                    <th>ZTClassification</th>
                    <th>TransactionID</th>
                    <th>View</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ZTcaseList != null && Model.ZTcaseList.Any())
                {
                    @foreach (var item in Model.ZTcaseList)
                    {
                        <tr>
                            <td>@item.ProgramID</td>
                            <td>@item.SubProgramID</td>
                            <td>@item.AgentName</td>
                            <td>@item.EmployeeID</td>
                            <td>@item.AgentSupervsor</td>
                            <td>@item.ZTRaisedBy</td>
                            <td>@item.ZTRaisedDate</td>
                            <td>@item.TransactionDate</td>
                            <td>@item.ZTClassification</td>
                            <td>@item.TransactionID</td>
                          
                            <td>
                                <a href="/QAManager/ZeroTolerance?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">
                                    View
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">No pending Zt Cases.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


</div>
<<<<<<< HEAD

@await Html.PartialAsync("_MailModal")
<script src="~/js/xlsx.full.min.js"></script>
<script src="~/js/jquery.min.js"></script>
<script>
           $(document).ready(function () {
     $('body > *:not(.modal)').css('pointer-events', 'none')
        $('#mailModal').modal({
            backdrop: 'static',
            keyboard: false
        });
         $('#mailModal').on('hidden.bs.modal', function () {
        $('body > *:not(.modal)').css('pointer-events', 'auto');
    });

    });
            function handleModalClose() {
        $.ajax({
            url: '/LogIn/NotificationClosed',
            type: 'GET',
            success: function (response) {
                console.log('C# GET method called successfully.');
            }
        });

        $('#mailModal').modal('hide');
    }

        $(function () {
            console.log("🔄 Document ready");

               $.ajax({
        url: '/LogIn/GetNotification',
        type: 'GET',
        success: function (data) {
            console.log(JSON.stringify(data));
            if (!data || !data.fileBase64 || !data.attachmentFileName) {
                // $('#mailModalAttachment').html('<p style="color:red;">No attachment found.</p>');
                // $('#mailModal').modal('show');
                return;
            }
                $('#mailModalSubject').text(data.subject);

                 $('#mailModalBody').html(data.body);
            const fileExtension = data.attachmentFileName.split('.').pop().toLowerCase();
            const byteCharacters = atob(data.fileBase64);
            const byteNumbers = new Array(byteCharacters.length);
            for (let i = 0; i < byteCharacters.length; i++) {
                byteNumbers[i] = byteCharacters.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            const file = new Blob([byteArray]);

            let html = "";

            if (["xlsx", "xls", "csv"].includes(fileExtension)) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const data = e.target.result;
                    const workbook = XLSX.read(data, { type: 'binary' });
                    const sheetName = workbook.SheetNames[0];
                    let rawHtml = XLSX.utils.sheet_to_html(workbook.Sheets[sheetName]);

                    rawHtml = rawHtml
                        .replace(/<table[^>]*>/, `
                            <table style="width: 100%; border-collapse: collapse; font-family: 'Segoe UI', sans-serif; font-size: 14px; margin-top: 10px; box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05); overflow-x: auto;">`)
                        .replace(/<thead>/, `<thead style="background-color: #f1f5f9;">`)
                        .replace(/<th[^>]*>/g, `
                            <th style="background-color: #e8f0fe; border: 1px solid #d0d7de; padding: 12px 14px; text-align: left; font-weight: 600; color: #333; white-space: nowrap; border-bottom: 2px solid #d0d7de;">`)
                        .replace(/<td[^>]*>/g, `
                            <td style="border: 1px solid #e0e0e0; padding: 10px 12px; color: #444; background-color: #ffffff;">`)
                        .replace(/<\/tr>/g, `</tr>`);

                    html = `
                        <div style="max-height: 500px; overflow-x: auto; overflow-y: auto; border: 1px solid #ddd; border-radius: 8px; padding: 10px; background-color: #fefefe; box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.05);">
                            <style>
                                #mailModalAttachment table tr:nth-child(even) td {
                                    background-color: #f9f9f9;
                                }
                                #mailModalAttachment table tr:hover td {
                                    background-color: #eef6ff;
                                    transition: background-color 0.3s;
                                }
                            </style>
                            ${rawHtml}
                        </div>`;

                    $('#mailModalAttachment').html(html);
                    $('#mailModal').modal('show');
                };

                reader.readAsBinaryString(file);
            } else if (fileExtension === "pdf") {
                const url = URL.createObjectURL(file);
                html = `<iframe src="${url}" width="100%" height="500px" style="border: 1px solid #ccc; border-radius: 6px;"></iframe>`;
                $('#mailModalAttachment').html(html);
                $('#mailModal').modal('show');
            } else {
                html = `<p style="color: red;">Cannot preview this file type: ${fileExtension}</p>`;
                $('#mailModalAttachment').html(html);
                $('#mailModal').modal('show');
            }
        },
        error: function (xhr) {
            console.error("Error loading notification:", xhr);
            $('#mailModalAttachment').html(`<p style="color:red;">Error loading notification.</p>`);
            $('#mailModal').modal('show');
        }
    });

        });
</script>

=======
 
>>>>>>> c4e038a (Camplaince)
