@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card shadow mb-4">
    <div class="card-header">
        <strong class="card-title"> Select process</strong>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="ProgramID">Program Name</label> <span style="color:red">*</span>
                    @Html.DropDownList(
                             "ProgramID",
                             (List<SelectListItem>)ViewBag.ProcessList,
                             "Select Program",
                             new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()", required = "required" }
                             )
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="SUBProgramID">Sub Program Name</label> <span style="color:red">*</span>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select" onchange="onSubProgramChange()" required>
                        <option value="">Select Process</option>
                    </select>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4" style="display: none;" id="Staticfeild">
    <div class="card-header">
        <strong class="card-title"> Static Feild</strong>
    </div>
    <div class="card-body">
        <div class="row">


            <div class="col-md-4">
                <div class="form-group mb-3">

                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Program Name</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Sub Program name</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Employee Supervisor</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Monitor Name</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Year</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Disposition</label>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Employee ID</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Employee name</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Agent Tenure (<90 or>90 days)</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Monitoring ID</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Month</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Category 1</label>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Call ID</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Monitored date</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Transaction duration (AHT)</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Transaction Date</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Week</label>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <div class="custom-control custom-checkbox">
                        <input type="checkbox" class="custom-control-input" id="customCheck1" checked disabled>
                        <label class="custom-control-label" for="customCheck1">Category 2</label>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>


<div class="card shadow mb-4" id="Sectionfeild" style="display: none;">
    <div class="card-header">
        <strong class="card-title">Section</strong>
    </div>
    <div class="card-body">
        <div class="row">
            <!-- Category -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Section_Category">Category</label><span style="color:red">*</span>
                    <input type="text" id="Section_Category" class="form-control">
                </div>
            </div>

            <!-- Parameters -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Sub_Section_Parameters">Parameters</label><span style="color:red">*</span>
                    <input type="text" id="Sub_Section_Parameters" class="form-control">
                </div>
            </div>

            <!-- Sub Parameters -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Sub_Section_SubParameters">Sub Parameters</label><span style="color:red">*</span>
                    <input type="text" id="Sub_Section_SubParameters" class="form-control">
                </div>
            </div>

            <!-- Section Dropdown -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Section_ID">Section</label><span style="color:red">*</span>
                    @Html.DropDownList("Section_ID", (List<SelectListItem>)ViewBag.Section_Category, "Select Section", new { @class = "custom-select", id = "Section_ID" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group mb-3" style="background-color: #1a1e32;">
                    <label for="Rating_ID">Rating</label><span style="color:red">*</span>
                    <div style="position: relative; width: 240px;" id="ratingDropdown">
                        <div id="selectedRatings"
                             style="border: 1px solid #ccc; padding: 8px 10px; background-color: #2b2f45; color: #fff; border-radius: 4px; cursor: pointer;">
                            Select Ratings
                        </div>
                        <div id="ratingCheckboxes"
                             style="display: none; border: 1px solid #ccc; border-top: none; max-height: 150px; overflow-y: auto;
                        background-color: #2b2f45; position: absolute; width: 100%; z-index: 1000; border-radius: 0 0 4px 4px;">
                            @foreach (SelectListItem item in ViewBag.RatingMaste)
                            {
                                <label style="display: block; padding: 6px 12px; color: white; cursor: pointer;">
                                    <input type="checkbox" class="rating-checkbox" value="@item.Value" style="margin-right: 6px;" />
                                    @item.Text
                                </label>
                            }
                        </div>
                    </div>
                </div>
            </div>


            <!-- Scorable -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="scorableDropdown">Scorable</label><span style="color:red">*</span>
                    <select id="scorableDropdown" class="custom-select">
                        <option value="">Select</option>
                        <option value="Yes">YES</option>
                        <option value="No">NO</option>
                    </select>
                </div>
            </div>

            <!-- Weightage -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Section_Score">Weightage</label><span style="color:red">*</span>
                    <input type="number" id="Section_Score" class="form-control">
                </div>
            </div>

            <!-- Level -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="LevelDropdown">Level</label><span style="color:red">*</span>
                    <select id="LevelDropdown" class="custom-select">
                        <option value="">Select</option>
                        <option value="1">Level 1</option>
                        <option value="2">Level 2</option>
                        <option value="3">Level 3</option>
                        <option value="4">Level 4</option>
                        <option value="5">Level 5</option>
                        <option value="6">Level 6</option>
                        <option value="7">Level 7</option>
                        <option value="8">Level 8</option>
                        <option value="9">Level 9</option>
                    </select>
                </div>
            </div>

            <!-- Fatal -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="FatalDropdown">Fatal</label>
                    <select id="FatalDropdown" class="custom-select">
                        <option value="">Select</option>
                        <option value="Yes">YES</option>
                        <option value="No">NO</option>
                    </select>
                </div>
            </div>

            <!-- Add Button -->
            <div class="col-md-3">
                <div class="form-group mb-3">
                    <button class="btn btn-primary" style="margin-top: 32px; margin-left: 45px;" onclick="addToGrid()">
                        Add
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="card shadow mt-4" id="sectiongried" style="display: none;">
    <div class="card-header">
        <strong class="card-title">Section List</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered" id="dataGrid">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Parameters</th>
                    <th>Sub Parameters</th>
                    <th>Section</th>
                    <th>Rating(s)</th>
                    <th>Scorable</th>
                    <th>Weightage</th>
                    <th>Level</th>
                    <th>Fatal</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="card shadow mb-4" id="DynamicFeilds" style="display: none;margin-top:15px;">
    <div class="card-header">
        <strong class="card-title">Root Cause Analysis</strong>
    </div>
    <div class="card-body">
        <div class="row">

           @*  <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Field_Name">Metric RCA</label><span style="color:red">*</span>

                    @Html.DropDownList("Field_Name", (List<SelectListItem>)ViewBag.Routw_causeList, "Select Metric RCA", new { @class = "custom-select", id = "Field_Name", required = "required" })

                    <small class="text-danger d-none" id="nameError">Field Name is required.</small>
                </div>
            </div> *@

            <div class="form-group mb-3">
                <label for="Field_Name">Metric RCA</label><span style="color:red">*</span>
                <select id="Field_Name" class="custom-select" required="required">
                    <option value="">Select Metric RCA</option>
                </select>
                <small class="text-danger d-none" id="nameError">Field Name is required.</small>
            </div>

            <div class="col-md-2">
                <div class="form-group mb-3">
                    <button id="Root_Cause" class="btn btn-primary mt-4">Add</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="card shadow" id="Root_Cause_Analysis_List" style="display:none">
    <div class="card-header">
        <strong class="card-title">Root Cause Analysis List</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered mt-3" id="rcaTable">
            <thead>
                <tr>

                    <th>ID</th>
                    <th>Metric RCA</th>
                    <th>Controllable</th>
                    <th>RCA 1</th>
                    <th>RCA 2</th>
                    <th>RCA 3</th>
                    <th>Comments Section</th>

                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>




<div class="card shadow mb-4" id="Predictive_CSAT" style="display:none;margin-top:15px">
    <div class="card-header">
        <strong class="card-title">Predictive Analysis</strong>
    </div>
    <div class="card-body">
        <div class="row">

            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Field_Name">Predictive - CSAT</label>
                    @Html.DropDownList("getPredictive", (List<SelectListItem>)ViewBag.getPredictiveList, "Select Predictive - CSAT", new { @class = "custom-select", id = "getPredictive" })

                    <small class="text-danger d-none" id="nameError">Field Name is required.</small>
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group mb-3">
                    <button id="Predictive-CSAT" class="btn btn-primary mt-4">Add</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="card shadow" id="Predictive_CSAT_List" style="display:none">
    <div class="card-header">
        <strong class="card-title">Predictive Analysis</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered mt-3" id="Predictive_CSAT">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Predictive Analysis</th>
                    
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>
<div class="card shadow mb-4" id="Upload_Dispostition_List" style="display:none">
    <div class="card-header">
        <strong class="card-title">Upload Disposition List</strong> <small class="form-text text-muted">
            <a href="/SampleFile/dispo.xls" download>Download Sample File</a>

        </small>

    </div>
    <div class="card-body">
        <form id="uploadForm" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-3">
                    <input type="file" id="fileUpload" name="file" class="form-control" />
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card shadow mb-4" id="Upload_Category_List" style="display:none">
    <div class="card-header">
        <strong class="card-title">Upload Category List</strong> <small class="form-text text-muted">
            <a href="/SampleFile/UploadCategory.xls" download>Download Sample File</a>

        </small>

    </div>
    <div class="card-body">
        <form id="uploadForm" method="post" enctype="multipart/form-data">
            <div class="row">
                <div class="col-md-3">
                    <input type="file" id="fileUploadCategory" name="file" class="form-control" />
                </div>
            </div>
        </form>
    </div>
</div>

<div class="card shadow mb-4" id="ZT_Classification" style="display:none;margin-top:15px">
    <div class="card-header">
        <strong class="card-title">ZT_Classification</strong>
    </div>
    <div class="card-body">
        <div class="row">

            <div class="col-md-3">
                <div class="form-group mb-3">
                    <label for="Field_Name">ZT Classification</label> <span style="color:red">*</span>
                    @Html.DropDownList("ZT_ClassificationID", (List<SelectListItem>)ViewBag.getZT_ClassificationList, "Select ZT_Classification", new { @class = "custom-select", id = "ZT_ClassificationID", required = "required" })

                    <small class="text-danger d-none" id="nameError">Field Name is required.</small>
                </div>
            </div>

            <div class="col-md-2">
                <div class="form-group mb-3">
                    <button id="btn_ZT_Classification" class="btn btn-primary mt-4">Add</button>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="card shadow" id="ZT_Classification_List" style="display:none">
    <div class="card-header">
        <strong class="card-title">ZT_Classification List</strong>
    </div>
    <div class="card-body">
        <table class="table table-bordered mt-3" id="ZT_Classificationtbl">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>ZT_Classification</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>


<div class="card shadow mb-4" id="Zero_tolerance_behaviour" style="display:none;margin-top:15px">
    <div class="card-header">
        <strong class="card-title">Zero Tolerance Behaviour</strong> <span style="color:red">*</span>
    </div>
    <div class="card-body">
        <div class="row">
            <label><strong>Was there any Zero Tolerance Behaviour identified?</strong></label>
            <div class="form-check form-check-inline" style="margin-left: 75px;">
                <input class="form-check-input" type="checkbox" id="yesCheckbox" name="zeroTolerance" value="Yes">
                <label class="form-check-label" for="yesCheckbox">Yes</label>
            </div>
            <div class="form-check form-check-inline" style="margin-left: 75px;">
                <input class="form-check-input" type="checkbox" id="noCheckbox" name="zeroTolerance" value="No">
                <label class="form-check-label" for="noCheckbox">No</label>
            </div>
        </div>


    </div>
</div>

<div class="card shadow mb-4">

    <div class="card-body">

        <div class="row">
            <button id="createform" style="margin-left:20px;" class="btn btn-primary mt-4">create Form</button>
        </div>

    </div>
</div>



<script src="~/js/jquery.min.js"></script>
<script src="~/js/apps.js"></script>

<script>
    const dropdownBox = document.getElementById('selectedRatings');
    const checkboxContainer = document.getElementById('ratingCheckboxes');
    const checkboxes = checkboxContainer.querySelectorAll('input[type="checkbox"]');

    dropdownBox.addEventListener('click', function () {
        checkboxContainer.style.display = checkboxContainer.style.display === 'block' ? 'none' : 'block';
    });

    document.addEventListener('click', function (e) {
        if (!document.getElementById('ratingDropdown').contains(e.target)) {
            checkboxContainer.style.display = 'none';
        }
    });

    checkboxes.forEach(cb => {
        cb.addEventListener('change', () => {
            let selected = [];
            checkboxes.forEach(i => {
                if (i.checked) selected.push(i.parentElement.textContent.trim());
            });
            dropdownBox.textContent = selected.length ? selected.join(', ') : 'Select Ratings';
        });
    });
</script>


<script>


        $(document).ready(function () {
        $("#ratingAdd").on("click", function () {
            var selectedText = $("#Rating_ID option:selected").text();
            var selectedValue = $("#Rating_ID").val();
                $("#Rating_List").show();

            if (selectedValue === "" || selectedValue === "Select Rating") {
                alert("Please select a valid rating.");
                return;
            }

            // Check if rating already exists in the table
            var exists = false;
            $("#RatingTable tbody tr").each(function () {
                if ($(this).find("td:first").text() === selectedValue) {
                    exists = true;
                    return false; // Break loop
                }
            });

            if (exists) {
                alert("Rating already added.");
                return;
            }

            // Create a new row with Remove button
            var newRow = `<tr>
                <td>${selectedValue}</td>
                <td>${selectedText}</td>
                <td><button class="btn btn-danger btn-sm removeRating">Remove</button></td>
            </tr>`;

            $("#RatingTable tbody").append(newRow);
        });

        $(document).on("click", ".removeRating", function () {
            $(this).closest("tr").remove();
        });
    });


</script>
<script>

        function UpLoadCategory()
    {
         var fileInput = document.getElementById("fileUploadCategory");


          let programID = $("#ProgramID").val();
        let subProgramID = $("#SUBProgramID").val();
        var formData = new FormData();
        formData.append("file", fileInput.files[0]);
        formData.append("processID", programID);
        formData.append("SubProcesID", subProgramID);

        fetch("/ManageForm/BulkInsertcagetoryList", {
            method: "POST",
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("File uploaded successfully: " + data.fileName);
            } else {

            }
        })
        .catch(error => {

        });
    }


        function UpLoadDispo()
        {
             var fileInput = document.getElementById("fileUpload");


              let programID = $("#ProgramID").val();
            let subProgramID = $("#SUBProgramID").val();
            var formData = new FormData();
            formData.append("file", fileInput.files[0]);
            formData.append("processID", programID);
            formData.append("SubProcesID", subProgramID);

            fetch("/ManageForm/BulkInsertDispostitionList", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("File uploaded successfully: " + data.fileName);
                } else {

                }
            })
            .catch(error => {

            });
        }

</script>

<script>
    $(document).ready(function () {
        $("input[name='zeroTolerance']").change(function () {
            $("input[name='zeroTolerance']").not(this).prop('checked', false);
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#btn_ZT_Classification").click(function (e) {
            e.preventDefault();

            var selectedValue = $("#ZT_ClassificationID").val();
            var selectedText = $("#ZT_ClassificationID option:selected").text();

            if (selectedValue === "" || selectedValue === "Select ZT_Classification") {
                $("#nameError").removeClass("d-none");
                return;
            } else {
                $("#nameError").addClass("d-none");
            }
            $("#ZT_Classification_List").show();

            var exists = false;
            $("#ZT_Classificationtbl tbody tr").each(function () {
                if ($(this).find("td:first").text().trim() === selectedValue) {
                    exists = true;
                    return false;
                }
            });
             if (exists) {

                return;
            } else {

            }
            if (!exists) {
                var row = `<tr>
                   <td>${selectedValue}</td>
                            <td>${selectedText}</td>
                            <td><button class="btn btn-danger btn-sm remove-row">Remove</button></td>
                           </tr>`;

                $("#ZT_Classificationtbl tbody").append(row);
            }
        });


        $(document).on("click", ".remove-row", function () {
            $(this).closest("tr").remove();
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#Predictive-CSAT").click(function (e) {
            e.preventDefault();

            var selectedValue = $("#getPredictive").val();
            var selectedText = $("#getPredictive option:selected").text();

            if (selectedValue === "" || selectedValue === "Select Get Predictive") {
                $("#nameError").removeClass("d-none");
                return;
            } else {
                $("#nameError").addClass("d-none");
            }
                $("#Predictive_CSAT_List").show();

            var exists = false;
            $("#Predictive_CSAT tbody tr").each(function () {
                if ($(this).find("td:first").text().trim() === selectedValue) {
                    exists = true;
                    return false;
                }
            });
             if (exists) {

                return;
            } else {

            }

            if (!exists) {
                var row = `<tr>
                  <td>${selectedValue}</td>
                            <td>${selectedText}</td>
                           

                            <td><button class="btn btn-danger btn-sm remove-row">Remove</button></td>
                           </tr>`;

                $("#Predictive_CSAT tbody").append(row);
            }
        });


        $(document).on("click", ".remove-row", function () {
            $(this).closest("tr").remove();
        });
    });
</script>
<script>
    $(document).ready(function () {
        $("#Root_Cause").click(function (e) {
            e.preventDefault();

            var selectedValue = $("#Field_Name").val();
            var selectedText = $("#Field_Name option:selected").text();

            if (selectedValue === "" || selectedValue === "Select Metric RCA") {
                $("#nameError").removeClass("d-none");
                return;
            } else {
                $("#nameError").addClass("d-none");
            }

            $("#Root_Cause_Analysis_List").show();
            // Check if the item is already in the table
            var exists = false;
            $("#rcaTable tbody tr").each(function () {
                if ($(this).find("td:first").text().trim() === selectedValue) {
                    exists = true;
                    return false; // Break loop
                }
            });
             if (exists) {
                $("#duplicateError").removeClass("d-none");
                return;
            } else {
                $("#duplicateError").addClass("d-none");
            }
            if (!exists) {
                var row = `<tr>
                 <td>${selectedValue}</td>
                            <td>${selectedText}</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>


                            <td><button class="btn btn-danger btn-sm remove-row">Remove</button></td>
                           </tr>`;

                $("#rcaTable tbody").append(row);
            }
        });


        $(document).on("click", ".remove-row", function () {
            $(this).closest("tr").remove();
        });
    });
</script>

<script>


        function insertData() {
        let rootCauseValues = [];
        let predictiveValues = [];
        let ztClassificationValues = [];
       var RatinfGried = [];
        let zeroTolerance = $("input[name='zeroTolerance']:checked").val();

        $("#rcaTable tbody tr").each(function () {
            rootCauseValues.push($(this).find("td:first").text().trim());
        });
         $("#RatingTable tbody tr").each(function () {
            var id = $(this).find("td:eq(0)").text().trim();
            RatinfGried.push(id);
        });


        $("#Predictive_CSAT tbody tr").each(function () {
            predictiveValues.push($(this).find("td:first").text().trim());
        });

        $("#ZT_Classificationtbl tbody tr").each(function () {
            ztClassificationValues.push($(this).find("td:first").text().trim());
        });

          let programID = $("#ProgramID").val();
        let subProgramID = $("#SUBProgramID").val();
        let requestData = {
            Root_Cause_Analysis: rootCauseValues.join(","),
            Predictive_Analysis: predictiveValues.join(","),
            ZT_Classification: ztClassificationValues.join(","),
            RatinfGried:RatinfGried.join(","),
            Zero_Tolerance: zeroTolerance,
            ProgramID: programID,
            SubProgramID: subProgramID,
            IsActive: 1,
            CreatedBy: "Admin",
            UpdatedBy: "Admin",
            CreatedDate: new Date().toISOString()
        };

        console.log("Data to insert:", requestData);


        $.ajax({
            type: "POST",
            url: "/ManageForm/InsertDynamicFields",
            data: JSON.stringify(requestData),
            contentType: "application/json",
            success: function (response) {

            },
            error: function (xhr) {
                alert("Error inserting data.");
            }
        });
    }

    $(document).ready(function () {
            $("#createform").click(function () {
                const fileUploadDispo = document.getElementById("fileUpload");
                const fileUploadCategory = document.getElementById("fileUploadCategory");

                const dispoSelected = fileUploadDispo.files.length > 0;
                const categorySelected = fileUploadCategory.files.length > 0;

                if (!dispoSelected && !categorySelected) {
                        alert("Please select at least one file to upload.");
                        return false;
                    }
                if (dispoSelected && categorySelected) {
                    alert("Please select only one file from Disposition  and Category — not both.");
                    return false;
                }



               UpLoadDispo();
               UpLoadCategory();
                submitFormData();
        });
    });

    function Uploadrating()
    {
         var tableData = [];


        $("#RatingTable tbody tr").each(function () {
            var row = {
                id: $(this).find("td:eq(0)").text().trim(),
                rating: $(this).find("td:eq(1)").text().trim()
            };
            tableData.push(row);
        });

        if (tableData.length === 0) {
            alert("No data available to submit.");
            return;
        }

        $.ajax({
            url: "/YourController/YourAction",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ ratings: tableData }),
            success: function (response) {
                alert("Form submitted successfully!");
            },
            error: function (xhr, status, error) {
                console.error("Error:", error);
                alert("Error submitting form. Please try again.");
            }
        });
    }
    function submitFormData() {




         let totalScore = 0;
        let programID = $("#ProgramID").val();
        let subProgramID = $("#SUBProgramID").val();

        if (!programID ) {
            alert("Please select  Program");
            return;
        }

         let formData2 = [];
    $("#dataGrid tbody tr").each(function () {
        var rowData = {
            Category: $(this).find("td:eq(0)").text().trim(),
            Parameters: $(this).find("td:eq(1)").text().trim(),
            SubParameters: $(this).find("td:eq(2)").text().trim(),
            Section: $(this).find("td:eq(3)").text().trim(),
            Ratings: $(this).find("td:eq(4)").text().trim(),
            Scorable: $(this).find("td:eq(5)").text().trim(),
            Score: $(this).find("td:eq(6)").text().trim(),
            Level: $(this).find("td:eq(7)").text().trim(),
            Fatal: $(this).find("td:eq(8)").text().trim(),

            ProgramID: programID,
            SubProgramID: subProgramID
        };
        formData2.push(rowData);
    });


        let rows2 = $("#dataGrid tbody tr"); 

        if (rows2.length === 0) {
            alert("No sections added. Please add sections before submitting.");
            return;
        }


         $("#dataGrid tbody tr").each(function () {
        var scorable = $(this).find("td:eq(5)").text().trim().toLowerCase(); 
        var score = parseFloat($(this).find("td:eq(6)").text().trim());

        if (scorable === "yes") {
            if (!isNaN(score)) {
                totalScore += score;
            }
        }
    });

    if (totalScore !== 100) {
        alert("The total Weightage of  sections must be exactly 100. Current total: " + totalScore);
        isValid = false;
        return;
    }

       let isValid = true;


        if ($("#rcaTable tbody tr").length === 0) {
            alert("Please add at least one Metric RCA.");
            return;
            isValid = false;
        }
        // if ($("#Predictive_CSAT tbody tr").length === 0) {
        //     alert("Please add at least one Predictive - CSAT.");
        //      return;
        //     isValid = false;
        // }
        if ($("#ZT_Classificationtbl tbody tr").length === 0) {
            alert("Please add at least one ZT Classification.");
            return;
            isValid = false;
        }

        

        // if (!$("#yesCheckbox").is(":checked") && !$("#noCheckbox").is(":checked")) {
        //     alert("Please select Zero Tolerance Behaviour.");
        //      return;
        //     isValid = false;
        // }
        console.log(JSON.stringify(formData2));

        if (isValid) {
            insertData();
        }
        $.ajax({
            url: '/ManageForm/InsertSectionFeilds',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({ sections: formData2 }), // Use formData2 for section data
            success: function (response) {
                alert("Form Created  successfully!");
                 window.location.href = "/ManageForm/FormBuilder";
                $("#dataGrid tbody").empty();
                $("#sectiongried").hide();
                $("#ZT_Classificationtbl tbody").empty();
                $("#ZT_Classification_List").hide();
                $("#rcaTable tbody").empty();
                $("#Root_Cause_Analysis_List").hide();
                $("#Predictive_CSAT tbody").empty();
                $("#Predictive_CSAT_List").hide();


            },
            error: function (error) {
                console.log("Error:", error);
                alert("Error submitting section data.");
            }
        });



    }

</script>


<script>
    function onProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        if (programId === "") {
            alert("Select Valid  Program");
            return;
        }
        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Admin/GetSUBProcessList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                console.log(response.d);
                var dropdown = $('#SUBProgramID');
                dropdown.empty();
                dropdown.append('<option value="">Select Process</option>');
                response.proces.forEach(function (item) {
                    dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                });

                if (response.proces && response.proces.length > 0) {
                    $("#DynamicFeilds").hide();
                    $("#Staticfeild").hide();
                    $("#Sectionfeild").hide();
                } else {
                    // $("#DynamicFeilds").show();
                    // $("#Sectionfeild").show();
                    // $("#Staticfeild").show();
                 alert("This Program does not have a Sub Program. Please create a Sub Program first!");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });

    }
    // function onSubProgramChange() {
    //        var subProgramId = document.getElementById("SUBProgramID").value;
    //           var programId = document.getElementById("ProgramID").value;


    //             if (subProgramId === "") {
    //                 $("#Sectionfeild").hide();
    //                 $("#Staticfeild").hide();
    //                 $("#DynamicFeilds").hide();
    //                 $("#Predictive_CSAT").hide();
    //                  $("#ZT_Classification").hide();
    //                   $("#Zero_tolerance_behaviour").hide();
    //                         $("#Upload_Dispostition_List").hide();
    //                          $("#Upload_Category_List").hide();

    //                 alert("Select Valid Sub Program");
    //                  return ;

    //             } else {


    //             }
    //                    $.ajax({
    //             type: "POST",
    //             data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
    //             url: "/ManageForm/CheckIsFormCreated",
    //             contentType: "application/json; charset=utf-8",
    //             dataType: "json",
    //             success: function (response) {

    //                  if (response.data === 1) {

    //                         window.location.href = `/ManageForm/EditForm?programId=${programId}&subProgramId=${subProgramId}`;
    //                     } else {


    //                             $.ajax({
    //                                 type: "POST",
    //                                 data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
    //                                 url: "/ManageForm/CheckIsFormReplicated",
    //                                 contentType: "application/json; charset=utf-8",
    //                                 dataType: "json",
    //                                 success: function (response) {

    //                                         if (response.data === 1) {
    //                                              alert("This Form Is Already Replicated. Kindly Activate This Form.");
    //                                              window.location.href = "/ManageForm/FormBuilder";

    //                                         } else {
    //                                                 $("#DynamicFeilds").show();
    //                                                 $("#Sectionfeild").show();
    //                                                 $("#Staticfeild").show();
    //                                                 $("#ZT_Classification").show();

    //                                                  $("#RatingDropDawon").show();
    //                                                 //$("#Zero_tolerance_behaviour").show();
    //                                                 $("#Predictive_CSAT").show();
    //                                                   $("#Upload_Dispostition_List").show();
    //                                                    $("#Upload_Category_List").show();

    //                                         }
    //                                 },
    //                                 error: function (xhr, status, error) {
    //                                     console.error("Error occurred: " + error);
    //                                 }
    //                             });

    //                     }
    //             },
    //             error: function (xhr, status, error) {
    //                 console.error("Error occurred: " + error);
    //             }
    //         });




    // }


           function onSubProgramChange() {
        var subProgramId = document.getElementById("SUBProgramID").value;
        var programId = document.getElementById("ProgramID").value;

        // Hide all fields initially
        $("#Sectionfeild").hide();
        $("#Staticfeild").hide();
        $("#DynamicFeilds").hide();
        $("#Predictive_CSAT").hide();
        $("#ZT_Classification").hide();
        $("#Zero_tolerance_behaviour").hide();
        $("#Upload_Dispostition_List").hide();
        $("#Upload_Category_List").hide();

        if (subProgramId === "") {
            alert("Select Valid Sub Program");
            return;
        }

        // First AJAX: Check if form is created
        $.ajax({
            type: "POST",
            url: "/ManageForm/CheckIsFormCreated",
            data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                console.log("RCA List (JSON):", JSON.stringify(response.rcaList));

                // Populate RCA Dropdown
                const rcaDropdown = $("#Field_Name");
                rcaDropdown.empty(); // Clear existing options
                rcaDropdown.append('<option value="">Select Metric RCA</option>');

                if (response.rcaList && response.rcaList.length > 0) {
                    response.rcaList.forEach(item => {
                        const value = item.value || item.Value;
                        const text = item.text || item.Text;
                        rcaDropdown.append(`<option value="${value}">${text}</option>`);
                    });
                }

                // If form already exists, redirect to edit
                if (response.data === 1) {
                    window.location.href = `/ManageForm/EditForm?programId=${programId}&subProgramId=${subProgramId}`;
                } else {
                    // Second AJAX: Check if form is replicated
                    $.ajax({
                        type: "POST",
                        url: "/ManageForm/CheckIsFormReplicated",
                        data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.data === 1) {
                                alert("This Form Is Already Replicated. Kindly Activate This Form.");
                                window.location.href = "/ManageForm/FormBuilder";
                            } else {
                                // Show all relevant form fields
                                $("#DynamicFeilds").show();
                                $("#Sectionfeild").show();
                                $("#Staticfeild").show();
                                $("#ZT_Classification").show();
                                $("#RatingDropDawon").show();
                                $("#Predictive_CSAT").show();
                                $("#Upload_Dispostition_List").show();
                                $("#Upload_Category_List").show();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error in CheckIsFormReplicated:", error);
                        }
                    });
                }
            },
            error: function (xhr, status, error) {
                console.error("Error in CheckIsFormCreated:", error);
            }
        });
    }


    function addToGrid() {
        var category = document.getElementById("Section_Category").value.trim();
        var parameters = document.getElementById("Sub_Section_Parameters").value.trim();
             var Sub_Section_SubParameters = document.getElementById("Sub_Section_SubParameters").value.trim();
        
        var sectionSelect = document.getElementById("Section_ID");
        var sectionValue = sectionSelect.value;
        var sectionText = sectionSelect.options[sectionSelect.selectedIndex].text;

        var selectedRatings = [];
        checkboxes.forEach(cb => {
            if (cb.checked) selectedRatings.push(cb.parentElement.textContent.trim());
        });

        var scorable = document.getElementById("scorableDropdown").value;
        var score = document.getElementById("Section_Score").value.trim();

        var levelSelect = document.getElementById("LevelDropdown");
        var levelValue = levelSelect.value;
        var levelText = levelSelect.options[levelSelect.selectedIndex].text;

        var fatalSelect = document.getElementById("FatalDropdown");
        var fatalValue = fatalSelect.value;
        var fatalText = fatalSelect.options[fatalSelect.selectedIndex].text;

        if (score > 100) {
            alert("You cannot insert a Weightage greater than 100.");
            return;
        }

        if (category === "" || parameters === "" || sectionValue === "" || selectedRatings.length === 0 || scorable === "" || score === "" || levelValue === "" || fatalText === "") {
            alert("Please fill all fields before adding.");
            return;
        }

        document.getElementById("sectiongried").style.display = "block";

        var table = document.getElementById("dataGrid").getElementsByTagName("tbody")[0];
        var newRow = table.insertRow();
        newRow.innerHTML = `
            <td>${category}</td>
            <td>${parameters}</td>
                  <td>${Sub_Section_SubParameters}</td>
            <td>${sectionText}</td>
            <td>${selectedRatings.join(', ')}</td>
            <td>${scorable}</td>
            <td>${score}</td>
            <td>${levelText}</td>
            <td>${fatalText}</td>
            <td><button class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button></td>
        `;

        // Clear form
        document.getElementById("Section_Category").value = "";
        document.getElementById("Sub_Section_Parameters").value = "";
        document.getElementById("Sub_Section_SubParameters").value = "";
        document.getElementById("Section_ID").value = "";
        checkboxes.forEach(cb => cb.checked = false);
        updateSelectedRatings();
        document.getElementById("scorableDropdown").value = "";
        document.getElementById("Section_Score").value = "";
        document.getElementById("LevelDropdown").value = "";
        document.getElementById("FatalDropdown").value = "";
    }
     function updateSelectedRatings() {
        let selected = [];
        checkboxes.forEach(cb => {
            if (cb.checked) selected.push(cb.parentElement.textContent.trim());
        });
        dropdownBox.textContent = selected.length ? selected.join(', ') : 'Select Ratings';
    }
    function removeRow(btn) {
        var row = btn.parentNode.parentNode;
        row.remove();
    }
</script>