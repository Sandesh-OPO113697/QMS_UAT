@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card shadow mb-4">
    <div class="card-header">
        <strong class="card-title"> Select process</strong>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="ProgramID">Program Name</label>
                    @Html.DropDownList(
                             "ProgramID",
                             (List<SelectListItem>)ViewBag.ProcessList,
                             "Select Program",
                             new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" }
                             )
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select" onchange="onSubProgramChange()">
                        <option value="">Select Process</option>
                    </select>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4" id="SectionGried" style="display:none">
    <div class="card-header">
        <strong class="card-title"> Section</strong>
    </div>
    <div class="card-body">

        <table id="sectionGrid" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Category</th>
                    <th>Section Name</th>
                    <th>Rating Name</th>
                    <th>Scorable</th>
                    <th>Score</th>
                    <th>Level</th>
                    <th>Fatal</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                
            </tbody>
        </table>

    </div>
</div>


<div class="card shadow mb-4"  id="DynamicTable" style="display:none">
    <div class="card-header">
        <strong class="card-title"> Dynamic </strong>
    </div>
    <div class="card-body">

        <table id="dynamicGrid" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Fields Name</th>
                    <th>ValueType</th>
                    <th>value</th>

                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>


<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Section</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId">

                    <div class="form-group">
                        <label>Category</label>
                        <input type="text" class="form-control" id="editCategory">
                    </div>

                    <div class="form-group">
                        <label>Section</label>
                        <select id="editSection" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label>Rating</label>
                        <select id="editRating" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label>Scorable</label>
                        <select id="editScorable" class="form-control">
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Score</label>
                        <input type="text" class="form-control" id="editScore">
                    </div>

                    <div class="form-group">
                        <label>Level</label>
                        <input type="text" class="form-control" id="editLevel">
                    </div>

                    <div class="form-group">
                        <label>Fatal</label>
                        <select id="editFatal" class="form-control">
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>

                    <button type="button" class="btn btn-primary" onclick="updateSection()">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div id="editModalDynmic" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Dynamic Field</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="editItemId">
                <div class="form-group">
                    <label for="editFieldName">Field Name</label>
                    <input type="text" id="editFieldName" class="form-control" readonly>
                </div>
                <div class="form-group">
                    <label for="editDropdown">Select Value</label>
                    <select id="editDropdown" class="form-control">
                      
                    </select>
                </div>

                <div class="form-group">
                    <label for="newValue">Edit Value (Seprated by ,)</label>
                    <input type="text" id="newValue" class="form-control" placeholder="Enter new value">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="saveEditedValue()">Save</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script src="~/js/jquery.min.js"></script>
<script>
    function editDynamicSection(item) {
        console.log("Editing item:", item);

        $("#editItemId").val(item.id);
        $("#editFieldName").val(item.fields_Value);

        var dropdown = $("#editDropdown");
        dropdown.empty();
        var options = item.value.split(',');
        options.forEach(function (option) {
            dropdown.append(new Option(option, option));
        });

 
        $("#editModalDynmic").modal("show");
    }

    function saveEditedValue() {
        var id = $("#editItemId").val();
        var newValue = $("#newValue").val().trim();

        if (!newValue.includes(",")) {
            alert("Please enter a value separated by a comma (,)");
            return;
        }

        if (!id) {
            alert("Invalid item ID.");
            return;
        }

        $.ajax({
            type: "POST",
            url: "/ManageForm/UpdateDynamicFieldsValue",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify({ Id: id, NewValue: newValue }),
            success: function (response) {
                if (response.success) {
                    var programId = $("#ProgramID").val();
                    var subProgramId = $("#SUBProgramID").val();

                    if (!programId || !subProgramId) {
                        console.error("Missing required program/sub-program ID.");
                        return;
                    }

                    $.ajax({
                        type: "POST",
                        url: "/ManageForm/GetdynamicfeildsGried",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                        success: function (response) {
                            populatedyanamicfeildsGrid(response);
                            $("#editModalDynmic").modal("hide"); // Hide modal after updating the grid
                        },
                        error: function (xhr, status, error) {
                            console.error("Error loading dynamic fields: " + error);
                        }
                    });

                } else {
                    alert("Update failed: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error updating value: " + error);
            }
        });
    }


    function onProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        if (programId === "") {
            alert("Select Valid  Program");
            return;

        }
    
        $("#SectionGried").hide();
        $("#DynamicTable").hide();
        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Admin/GetSUBProcessList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                console.log(response.d);
                var dropdown = $('#SUBProgramID');
                dropdown.empty();
                dropdown.append('<option value="">Select Process</option>');
                response.proces.forEach(function (item) {
                    dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                });

                if (response.proces && response.proces.length > 0) {
                 
                } else {
                  

                }
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });

    }
    
    function populatedyanamicfeildsGrid(data) {
        console.log(JSON.stringify(data));
        var tableBody = $("#dynamicGrid tbody");
        tableBody.empty(); 

        if (data.length === 0) {
            tableBody.append("<tr><td colspan='10' class='text-center'>No records found</td></tr>");
            return;
        }

        $.each(data, function (index, item) {
            var row = "<tr>" +
                "<td>" + item.id + "</td>" +          
                "<td>" + item.fields_Value + "</td>" +
                "<td>" + item.valueType + "</td>" +
                "<td>" + item.value + "</td>" +
                "<td>" +
                "<button class='btn btn-primary' onclick='editDynamicSection(" + JSON.stringify(item) + ")'>Edit</button> " +        
                "</td>" +
                "</tr>";

            tableBody.append(row);
        });
    }
 

    function populateGrid(data) {
        var tableBody = $("#sectionGrid tbody");
        tableBody.empty(); 
        if (data.length === 0) {
            tableBody.append("<tr><td colspan='10' class='text-center'>No records found</td></tr>");
            return;
        }

        $.each(data, function (index, item) {
            var row = "<tr>" +
                "<td>" + item.id + "</td>" +
                "<td>" + item.category + "</td>" +
                "<td>" + item.sectionName + "</td>" +
                "<td>" + item.ratingName + "</td>" +
                "<td>" + item.scorable + "</td>" +
                "<td>" + item.score + "</td>" +
                "<td>" + item.level + "</td>" +
                "<td>" + item.fatal + "</td>" +
                "<td>" +
                "<button class='btn btn-primary' onclick='editSection(" + JSON.stringify(item) + ")'>Edit</button> " +
                "<button class='btn btn-danger' onclick='deleteSection(" + item.id + ")'>Delete</button>" +
                "</td>" +
                "</tr>";

            tableBody.append(row);
        });
    }
    function onSubProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        var subProgramId = document.getElementById("SUBProgramID").value;

        if (subProgramId === "") {
        
            alert("Select Valid Sub Program");

        } else {
            $.ajax({
                type: "POST",
                data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                url: "/ManageForm/GetSectionGried",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#SectionGried").show();
                    populateGrid(response);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });

            $.ajax({
                type: "POST",
                data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                url: "/ManageForm/GetdynamicfeildsGried",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#DynamicTable").show();
                    populatedyanamicfeildsGrid(response);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
    }
    
    function toggleDropdown() {
        let valueType = $("#DnyvalueType").val();
        if (valueType === "dropdown") {
            $("#dropdownValuesContainer").show();
        } else {
            $("#dropdownValuesContainer").hide();
        }
    }

</script>