@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="card shadow mb-4">
    <div class="card-header">
        <strong class="card-title"> Select process</strong>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="ProgramID">Program Name</label>
                    @Html.DropDownList(
                             "ProgramID",
                             (List<SelectListItem>)ViewBag.ProcessList,
                             "Select Program",
                             new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" }
                             )
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select" onchange="onSubProgramChange()">
                        <option value="">Select Process</option>
                    </select>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="card shadow mb-4" id="SectionGried" style="display:none">
    <div class="card-header">
        <strong class="card-title"> Section</strong>
    </div>
    <div class="card-body">

        <table id="sectionGrid" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Category</th>
                    <th>Section Name</th>
                    <th>Rating Name</th>
                    <th>Scorable</th>
                    <th>Score</th>
                    <th>Level</th>
                    <th>Fatal</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                
            </tbody>
        </table>

    </div>
</div>


<div class="card shadow mb-4">
    <div class="card-header">
        <strong class="card-title"> Dynamic </strong>
    </div>
    <div class="card-body">

        <table id="dynamicGrid" class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Fields Name</th>
                    <th>ValueType</th>
                    <th>value</th>

                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>


<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Section</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId">

                    <div class="form-group">
                        <label>Category</label>
                        <input type="text" class="form-control" id="editCategory">
                    </div>

                    <div class="form-group">
                        <label>Section</label>
                        <select id="editSection" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label>Rating</label>
                        <select id="editRating" class="form-control"></select>
                    </div>

                    <div class="form-group">
                        <label>Scorable</label>
                        <select id="editScorable" class="form-control">
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Score</label>
                        <input type="text" class="form-control" id="editScore">
                    </div>

                    <div class="form-group">
                        <label>Level</label>
                        <input type="text" class="form-control" id="editLevel">
                    </div>

                    <div class="form-group">
                        <label>Fatal</label>
                        <select id="editFatal" class="form-control">
                            <option value="Yes">Yes</option>
                            <option value="No">No</option>
                        </select>
                    </div>

                    <button type="button" class="btn btn-primary" onclick="updateSection()">Update</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editModalDynamifeils" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Dynamic Field</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <div class="mb-3">
                        <label for="DynId" class="form-label">ID</label>
                        <input type="text" class="form-control" id="DynId" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="Dnyfields_Value" class="form-label">Field Name</label>
                        <input type="text" class="form-control" id="Dnyfields_Value">
                    </div>
                    <div class="mb-3">
                        <label for="DnyvalueType" class="form-label">Value Type</label>
                        <select class="form-select" id="DnyvalueType" onchange="toggleDropdown()">
                            <option value="text">Text</option>
                            <option value="dropdown">Dropdown</option>
                        </select>
                    </div>
                    <div class="mb-3" id="dropdownValuesContainer" style="display: none;">
                        <label for="DynValue" class="form-label">Dropdown Values</label>
                        <select class="form-select" id="DynValue" multiple></select>
                    </div>
                    <div class="mb-3">
                        <label for="DynValue" class="form-label">Value</label>
                        <input type="text" class="form-control" id="DynValue">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveDynamicSection()">Save</button>
            </div>
        </div>
    </div>
</div>




<script>
    function onProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        if (programId === "") {
            alert("Select Valid  Program");
            return;

        }
        $("#SectionGried").hide();
        $.ajax({
            type: "POST",
            data: JSON.stringify({ id: programId }),

            url: "/Admin/GetSUBProcessList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {

                console.log(response.d);
                var dropdown = $('#SUBProgramID');
                dropdown.empty();
                dropdown.append('<option value="">Select Process</option>');
                response.proces.forEach(function (item) {
                    dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                });

                if (response.proces && response.proces.length > 0) {
                    // $("#DynamicFeilds").hide();
                    // $("#Staticfeild").hide();
                    // $("#Sectionfeild").hide();
                } else {
                    // $("#DynamicFeilds").show();
                    // $("#Sectionfeild").show();
                    // $("#Staticfeild").show();

                    // $.ajax({
                    //     type: "POST",
                    //     data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                    //     url: "/ManageForm/GetSectionGried",
                    //     contentType: "application/json; charset=utf-8",
                    //     dataType: "json",
                    //     success: function (response) {
                    //         populateGrid(response);
                    //     },
                    //     error: function (xhr, status, error) {
                    //         console.error("Error occurred: " + error);
                    //     }
                    // });


                }
            },
            error: function (xhr, status, error) {
                console.error("Error occurred: " + error);
            }
        });

    }
    
    function populatedyanamicfeildsGrid(data) {
        console.log(JSON.stringify(data));
        var tableBody = $("#dynamicGrid tbody");
        tableBody.empty(); 

        if (data.length === 0) {
            tableBody.append("<tr><td colspan='10' class='text-center'>No records found</td></tr>");
            return;
        }

        $.each(data, function (index, item) {
            var row = "<tr>" +
                "<td>" + item.id + "</td>" +          
                "<td>" + item.fields_Value + "</td>" +
                "<td>" + item.valueType + "</td>" +
                "<td>" + item.value + "</td>" +
           
                "<td>" +
                "<button class='btn btn-primary' onclick='editDynamicSection(" + JSON.stringify(item) + ")'>Edit</button> " +
                "<button class='btn btn-danger' onclick='deleteSection(" + item.id + ")'>Delete</button>" +
                "</td>" +
                "</tr>";

            tableBody.append(row);
        });
    }
    function populateGrid(data) {
        var tableBody = $("#sectionGrid tbody");
        tableBody.empty(); // Clear previous data

        if (data.length === 0) {
            tableBody.append("<tr><td colspan='10' class='text-center'>No records found</td></tr>");
            return;
        }

        $.each(data, function (index, item) {
            var row = "<tr>" +
                "<td>" + item.id + "</td>" +
                "<td>" + item.category + "</td>" +
                "<td>" + item.sectionName + "</td>" +
                "<td>" + item.ratingName + "</td>" +
                "<td>" + item.scorable + "</td>" +
                "<td>" + item.score + "</td>" +
                "<td>" + item.level + "</td>" +
                "<td>" + item.fatal + "</td>" +
                "<td>" +
                "<button class='btn btn-primary' onclick='editSection(" + JSON.stringify(item) + ")'>Edit</button> " +
                "<button class='btn btn-danger' onclick='deleteSection(" + item.id + ")'>Delete</button>" +
                "</td>" +
                "</tr>";

            tableBody.append(row);
        });
    }
    function onSubProgramChange() {
        var programId = document.getElementById("ProgramID").value;
        var subProgramId = document.getElementById("SUBProgramID").value;

        if (subProgramId === "") {
        
            alert("Select Valid Sub Program");

        } else {
            $.ajax({
                type: "POST",
                data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                url: "/ManageForm/GetSectionGried",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#SectionGried").show();
                    populateGrid(response);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });

            $.ajax({
                type: "POST",
                data: JSON.stringify({ ProcessID: programId, SUBProcessID: subProgramId }),
                url: "/ManageForm/GetdynamicfeildsGried",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#SectionGried").show();
                    populatedyanamicfeildsGrid(response);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
    }
    function editSection(item) {
        $("#editId").val(item.id);
        $("#editCategory").val(item.category);
        $("#editScore").val(item.score);
        $("#editLevel").val(item.level);
        $("#editScorable").val(item.scorable);
        $("#editFatal").val(item.fatal);
        console.log(item);
        console.log(JSON.stringify(item));
        let categoryid = item.categoryid; // Ensure category ID is correctly set
        let ratingid = item.ratingId; // Rating ID

        console.log("Category ID: " + categoryid);
        console.log("Rating ID: " + ratingid);

        $.ajax({
            url: "/ManageForm/GetDropdownData",
            type: "GET",
            success: function (response) {
                var sectionDropdown = $("#editSection");
                sectionDropdown.empty();
                response.sections.forEach(function (section) {
                    let isSelected = section.id == categoryid; // Match category ID
                    sectionDropdown.append(new Option(section.name, section.id, false, isSelected));
                });

                var ratingDropdown = $("#editRating");
                ratingDropdown.empty();
                response.ratings.forEach(function (rating) {
                    let isSelected = rating.id == ratingid; // Match rating ID
                    ratingDropdown.append(new Option(rating.name, rating.id, false, isSelected));
                });

                $("#editModal").modal("show"); // Show the modal
            },
            error: function (xhr, status, error) {
                console.error("Error fetching dropdown data: " + error);
            }
        });
    }


    function editDynamicSection(item) {
        $("#DynId").val(item.id);
        $("#Dnyfields_Value").val(item.fields_Value);
        $("#DnyvalueType").val(item.valueType);
        $("#DynValue").val(item.value);

        let categoryid = item.dynamic_field_ID;
        if (item.valueType === "dropdown") {
            // Show dropdown container
            $("#dropdownValuesContainer").show();

            // Split the values by comma and add them to the dropdown
            let values = item.value.split(',');
            let dropdown = $("#DynValue");
            dropdown.empty(); // Clear the current options

            values.forEach(function (val) {
                dropdown.append(new Option(val, val));
            });

            // Set the current value to the selected one
            dropdown.val(values);
        } else {
            // Hide dropdown container if it's not a dropdown
            $("#dropdownValuesContainer").hide();
            $("#DynValue").val(item.value);
        }

        // Show the modal
        $("#editModalDynamifeils").modal("show");
       

       
    }
    function updateSection() {
        var sectionData = {
            Id: $("#editId").val(),
            Category: $("#editCategory").val(),
            SectionId: $("#editSection").val(),
            RatingId: $("#editRating").val(),
            Scorable: $("#editScorable").val(),
            Score: $("#editScore").val(),
            Level: $("#editLevel").val(),
            Fatal: $("#editFatal").val()
        };

        $.ajax({
            type: "POST",
            url: "/ManageForm/UpdateSection",
            contentType: "application/json",
            data: JSON.stringify(sectionData),
            success: function () {
                $("#editModalDynamifeils").modal("hide");
                onSubProgramChange(); 
            },
            error: function (xhr, status, error) {
                console.error("Error updating section: " + error);
            }
        });
    }
    function deleteSection(id) {
        if (confirm("Are you sure you want to delete this section?")) {
            $.ajax({
                url: "/ManageForm/DeleteSection",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({ Id: id }),
                success: function (response) {
                    if (response.success) {
                        alert("Section deleted successfully!");
                        location.reload(); 
                    } else {
                        alert("Error deleting section: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                    alert("An error occurred while deleting the section.");
                }
            });
        }
    }


</script>