@model ZtPanelHrCase
@using Newtonsoft.Json
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 my-4" id="AuditDiv">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">  </h5>
            <div class="row">


                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Program</label>
                    @Html.DropDownList("ProgramID", (List<SelectListItem>)ViewBag.Process, "Select Program", new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" })
                </div>
                <div class="form-group col-md-6">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select">
                    </select>
                </div>

                <div class="form-group col-md-4">
                    <label for="ViewType">Data View</label>
                    <select name="ViewType" id="ViewType" class="custom-select">
                        <option value="">--Select Data View--</option>
                        <option value="day">Day</option>
                        <option value="month">Month</option>
                        <option value="week">Week</option>
                    </select>
                </div>

                <div class="form-group col-md-4" id="dayPicker" style="display:none;">
                    <label for="dayInput">Select Day</label>
                    <input type="date" id="dayInput" class="form-control" />
                </div>

                <div class="form-group col-md-4" id="monthPicker" style="display:none;">
                    <label for="monthInput">Select Month</label>
                    <input type="month" id="monthInput" class="form-control" />
                </div>

                <div class="form-group col-md-4" id="weekPicker" style="display:none;">
                    <label for="weekInput">Select Week</label>
                    <input type="week" id="weekInput" class="form-control" />
                </div>

                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <button id="SaveForm" class="btn btn-primary mt-4" onclick="GetDashBoard(this);GetDashBoardMonitoring(event);">Search</button>
                    </div>

                </div>


            </div>
        </div>
    </div>
</div>



<div id="accordion11" class="col-12 my-4">
    <div class="card shadow">
        <div class="card-header" id="heading11">
            <a role="button" href="#collapse21" data-toggle="collapse" data-target="#collapse21" aria-expanded="false" aria-controls="collapse21">
                <strong>Monitor View</strong>
            </a>
        </div>
        <div id="collapse21" class="collapse" aria-labelledby="heading11" data-parent="#accordion11">
            <div class="row" id="dashboardContainer">
            </div>
        </div>
    </div>
</div>


<div class="card shadow mb-4">
    <div class="card-header" style="cursor: pointer;" data-toggle="collapse" data-target="#ztCaseTable23" aria-expanded="false" aria-controls="ztCaseTable23">
        <strong class="card-title">ZT Pending</strong>
    </div>
    <div id="ztCaseTable23" class="card-body collapse">
        <!-- Horizontal scroll wrapper -->
        <div style="overflow-x: auto;">
            <table class="table table-bordered" style="min-width: 1200px;">
                <thead>
                    <tr>
                        <th>ProgramID</th>
                        <th>SubProgramID</th>
                        <th>AgentName</th>
                        <th>EmployeeID</th>
                        <th>AgentSupervsor</th>
                        <th>Raied on</th>
                        <th style="display:none">ZTRaisedDate</th>
                        <th style="display:none">TransactionDate</th>
                        <th style="display:none">ZTClassification</th>
                        <th style="display:none">TransactionID</th>
                        <th>View</th>
                    </tr>
                </thead>
                @* <tbody>
                    @if (Model.PanelList != null && Model.PanelList.Any())
                    {
                        @foreach (var item in Model.PanelList)
                        {
                            <tr>
                                <td>@item.ProgramID</td>
                                <td>@item.SubProgramID</td>
                                <td>@item.AgentName</td>
                                <td>@item.EmployeeID</td>
                                <td>@item.AgentSupervsor</td>
                                <td>@item.ZTRaisedBy</td>
                                <td>@item.ZTRaisedDate</td>
                                <td>@item.TransactionDate</td>
                                <td>@item.ZTClassification</td>
                                <td>@item.TransactionID</td>
                                <td>
                                    <a href="/HR/PanelCases?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">
                                        View
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="text-center">No pending Zt Cases.</td>
                        </tr>
                    }
                </tbody> *@
                <tbody id="ztCasePanelTableBody">
                    <!-- filled by JS -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="card shadow mb-4" style="display:none">
    <div class="card-header" style="cursor: pointer;" data-toggle="collapse" data-target="#ztCasssseTable23" aria-expanded="false" aria-controls="ztCasssseTable23">
        <strong class="card-title">Pending Zt Case HR</strong>
    </div>
    <div id="ztCasssseTable23" class="card-body collapse">
        <!-- Added wrapper div for horizontal scrolling -->
        <div style="overflow-x: auto;">
            <table class="table table-bordered" style="min-width: 1200px;">
                <!-- optional: set min-width -->
                <thead>
                    <tr>
                        <th>ProgramID</th>
                        <th>SubProgramID</th>
                        <th>AgentName</th>
                        <th>EmployeeID</th>
                        <th>AgentSupervsor</th>
                        <th>Raied on</th>
                        <th style="display:none">ZTRaisedDate</th>
                        <th style="display:none">TransactionDate</th>
                        <th style="display:none">ZTClassification</th>
                        <th style="display:none">TransactionID</th>
                        <th>View</th>
                    </tr>
                </thead>
                @*     <tbody>
                    @if (Model.ZTcaseHrList != null && Model.ZTcaseHrList.Any())
                    {
                        @foreach (var item in Model.ZTcaseHrList)
                        {
                            <tr>
                                <td>@item.ProgramID</td>
                                <td>@item.SubProgramID</td>
                                <td>@item.AgentName</td>
                                <td>@item.EmployeeID</td>
                                <td>@item.AgentSupervsor</td>
                                <td>@item.ZTRaisedBy</td>
                                <td>@item.ZTRaisedDate</td>
                                <td>@item.TransactionDate</td>
                                <td>@item.ZTClassification</td>
                                <td>@item.TransactionID</td>
                                <td>
                                    <a href="/HR/HrZtCases?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">
                                        View
                                    </a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="11" class="text-center">No pending Zt Cases.</td>
                        </tr>
                    }
                </tbody> *@
                <tbody id="ztCaseHRTableBody">
                    <!-- filled by JS -->
                </tbody>

            </table>
        </div>
    </div>
</div>

<div class="card shadow mb-4" style="display:none">
    >
    <div class="card-header" style="cursor: pointer;" data-toggle="collapse" data-target="#ztCassssesssTable23" aria-expanded="false" aria-controls="ztCassssesssTable23">
        <strong class="card-title">Couching PIP</strong>
    </div>
    <div id="ztCassssesssTable23" class="card-body collapse" style="display:none">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>AgentID</th>
                    <th>Program</th>
                    <th>SubProgram</th>
                    <th>QA_Manager</th>
                    <th>CreatedBy</th>
                    <th>Createddate</th>


                </tr>
            </thead>
            @*  <tbody>
                @if (Model.HRPIP != null && Model.HRPIP.Any())
                {
                    @foreach (var item in Model.HRPIP)
                    {
                        <tr>
                            <td>@item.AgentID</td>
                            <td>@item.Program</td>
                            <td>@item.SubProgram</td>
                            <td>@item.QA_Manager</td>
                            <td>@item.CreatedBy</td>
                            <td>@item.Createddate</td>



                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center">No pending Zt Cases.</td>
                    </tr>
                }
            </tbody> *@
            <tbody id="couchingPIPTableBody">
                <!-- filled by JS -->
            </tbody>
        </table>
    </div>


</div>


<script>

        function GetDashBoard(event) {
        var programVal = $("#ProgramID").val();
        var programText = $("#ProgramID option:selected").text();

        var subProgramVal = $("#SUBProgramID").val();
        var subProgramText = $("#SUBProgramID option:selected").text();

        var filterVal = $("#ViewType").val();
        var filterText = $("#ViewType option:selected").text();

        console.log("Program:", programVal, "-", programText);
        console.log("SubProgram:", subProgramVal, "-", subProgramText);
        console.log("Filter:", filterVal, "-", filterText);

        // ? FIXED: This was an assignment (=), not a comparison (== or ===)
        if (filterVal === "") {
            Swal.fire({
                title: "Select All Fields!",
                icon: "info",
                draggable: true
            });
            return; // ?? prevent sending an invalid request
        }

        $.ajax({
            url: "/Leadership/Getdashboad", // ? Make sure this matches your controller route
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({
                Program: programText,
                SubProgram: subProgramText,
                filter: filterVal  // ? use filterVal, not filterText
            }),
                success: function (response) {
        console.log("Dashboard response:", response);

        // ZT Case Panel
        const panelData = response.baseListZTcaseModel || [];
        const $panelTable = $("#ztCasePanelTableBody");
        $panelTable.empty();
        if (panelData.length > 0) {
            panelData.forEach(item => {
                $panelTable.append(`
                    <tr>
                        <td>${item.programID}</td>
                        <td>${item.subProgramID}</td>
                        <td>${item.agentName}</td>
                        <td>${item.employeeID}</td>
                        <td>${item.agentSupervsor}</td>
                        <td>${item.ztRaisedBy}</td>
                        <td style="display:none>${item.ztRaisedDate}</td>
                        <td style="display:none>${item.transactionDate}</td>
                        <td style="display:none>${item.ztClassification}</td>
                        <td style="display:none>${item.transactionID}</td>
                        <td>
                            <a href="/Leadership/PanelCases?TransactionID=${item.transactionID}" class="btn btn-primary btn-sm">
                                View
                            </a>
                        </td>
                    </tr>
                `);
            });
        } else {
            $panelTable.append('<tr><td colspan="11" class="text-center">No pending Zt Cases.</td></tr>');
        }

        // ZT Case HR
        const hrData = response.baseListZtHrCase || [];
        const $hrTable = $("#ztCaseHRTableBody");
        $hrTable.empty();
        if (hrData.length > 0) {
            hrData.forEach(item => {
                $hrTable.append(`
                    <tr>
                        <td>${item.programID}</td>
                        <td>${item.subProgramID}</td>
                        <td>${item.agentName}</td>
                        <td>${item.employeeID}</td>
                        <td>${item.agentSupervsor}</td>
                        <td>${item.ztRaisedBy}</td>
                        <td style="display:none>${item.ztRaisedDate}</td>
                        <td style="display:none>${item.transactionDate}</td>
                        <td style="display:none>${item.ztClassification}</td>
                        <td style="display:none>${item.transactionID}</td>
                        <td>
                            <a href="/HR/HrZtCases?TransactionID=${item.transactionID}" class="btn btn-primary btn-sm">
                                View
                            </a>
                        </td>
                    </tr>
                `);
            });
        } else {
            $hrTable.append('<tr><td colspan="11" class="text-center">No pending Zt Cases.</td></tr>');
        }

        // Coaching PIP
        const pipData = response.baseListCouchingPIP || [];
        const $pipTable = $("#couchingPIPTableBody");
        $pipTable.empty();
        if (pipData.length > 0) {
            pipData.forEach(item => {
                $pipTable.append(`
                    <tr>
                        <td>${item.agentID}</td>
                        <td>${item.program}</td>
                        <td>${item.subProgram}</td>
                        <td>${item.qA_Manager}</td>
                        <td>${item.createdBy}</td>
                        <td>${item.createddate}</td>
                    </tr>
                `);
            });
        } else {
            $pipTable.append('<tr><td colspan="6" class="text-center">No pending Zt Cases.</td></tr>');
        }
    }
    ,
            error: function (xhr, status, error) {
                console.error("AJAX error:", error);
            }
        });
    }


        function onProgramChange() {
          var programId = document.getElementById("ProgramID").value;
          if (programId == "") {
              alert("Please Select Program first");
              return;
          }
          $.ajax({
              type: "POST",
              data: JSON.stringify({ id: programId }),

              url: "/Admin/GetSUBProcessList",
              contentType: "application/json; charset=utf-8",
              dataType: "json",
              success: function (response) {

                  var dropdown = $('#SUBProgramID');
                  dropdown.empty();
                  dropdown.append('<option value="">Select Sub Process</option>');
                   dropdown.append('<option value="ALL">' + "ALL" + '</option>');
                  response.proces.forEach(function (item) {
                      dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                  });
              },
              error: function (xhr, status, error) {
                  console.error("Error occurred: " + error);
              }
          });
      }





       // function GetDashBoardMonitoring(event) {
       //     var Program = $("#ProgramID").val();
       //     var SubProgram = $("#SUBProgramID").val();
       //     var filter = $("#ViewType").val();

       //     console.log("Program: " + Program);
       //     console.log("SubProgram: " + SubProgram);
       //     console.log("Filter: " + filter);

       //     $.ajax({
       //         url: "/Admin/Getdashboad",
       //         type: "POST",
       //         contentType: "application/json",
       //         data: JSON.stringify({ Program: Program, SubProgram: SubProgram, filter: filter }),
       //         success: function (response) {
       //             $('#dashboardContainer').empty();

       //             let data = typeof response === 'string' ? JSON.parse(response) : response;

       //             if (!Array.isArray(data) || data.length === 0) {
       //                 $('#dashboardContainer').html('<p>No data found</p>');
       //                 return;
       //             }

       //             data.forEach(function (item, index) {
       //                 let callQuality = parseFloat((item["Call Quality"] || "0").replace('%', ''));
       //                 let monitoring = parseFloat((item["Monitoring"] || "0").replace('%', ''));
       //                 let feedback = parseFloat((item["Feedback"] || "0").replace('%', ''));

       //                 let callChartId = `callQualityChart_${index}`;
       //                 let monitoringChartId = `monitoringChart_${index}`;
       //                 let feedbackChartId = `feedbackChart_${index}`;

       //                 let cardsHtml = `
       //                     <div class="col-md-4 my-4">
       //                         <div class="card shadow">
       //                             <div class="card-body text-center">
       //                                 <div id="${callChartId}"></div>
       //                                 <div class="mt-3"><strong>Date:</strong> ${item["Period"]}</div>
       //                             </div>
       //                         </div>
       //                     </div>
       //                     <div class="col-md-4 my-4">
       //                         <div class="card shadow">
       //                             <div class="card-body text-center">
       //                                 <div id="${monitoringChartId}"></div>
       //                                 <div class="mt-3"><strong>Monitoring:</strong> ${item["Monitoring"]}</div>
       //                             </div>
       //                         </div>
       //                     </div>
       //                     <div class="col-md-4 my-4">
       //                         <div class="card shadow">
       //                             <div class="card-body text-center">
       //                                 <div id="${feedbackChartId}"></div>
       //                                 <div class="mt-3"><strong>Feedback:</strong> ${item["Feedback"]}</div>
       //                             </div>
       //                         </div>
       //                     </div>
       //                 `;

       //                 $('#dashboardContainer').append(cardsHtml);

       //                 // ?? Inline function with attractive color & white % text
       //                 function renderRadialChart(chartId, value, label) {
       //                     let color = "#808080";

       //                     if (label === "Call Quality") {
       //                         if (value > 85) color = "#00c851";       // Green
       //                         else if (value >= 80) color = "#ffbb33"; // Amber
       //                         else color = "#ff4444";                  // Red
       //                     } else if (label === "Monitoring") {
       //                         if (value > 100) color = "#00c851";
       //                         else if (value >= 90) color = "#ffbb33";
       //                         else color = "#ff4444";
       //                     } else if (label === "Feedback") {
       //                         if (value > 90) color = "#00c851";
       //                         else if (value >= 85) color = "#ffbb33";
       //                         else color = "#ff4444";
       //                     }

       //                     let options = {
       //                         chart: {
       //                             type: 'radialBar',
       //                             height: 200
       //                         },
       //                         plotOptions: {
       //                             radialBar: {
       //                                 hollow: {
       //                                     size: '65%',
       //                                 },
       //                                 dataLabels: {
       //                                     name: {
       //                                         show: true,
       //                                         fontSize: '16px',
       //                                         color: '#fff'
       //                                     },
       //                                     value: {
       //                                         show: true,
       //                                         fontSize: '20px',
       //                                         fontWeight: 600,
       //                                         color: '#fff',
       //                                         formatter: function (val) {
       //                                             return val.toFixed(1) + '%';
       //                                         }
       //                                     }
       //                                 }
       //                             }
       //                         },
       //                         fill: {
       //                             colors: [color]
       //                         },
       //                         labels: [label],
       //                         series: [value]
       //                     };

       //                     let chart = new ApexCharts(document.querySelector("#" + chartId), options);
       //                     chart.render();
       //                 }

       //                 renderRadialChart(callChartId, callQuality, "Call Quality");
       //                 renderRadialChart(monitoringChartId, monitoring, "Monitoring");
       //                 renderRadialChart(feedbackChartId, feedback, "Feedback");
       //             });
       //         },
       //         error: function (xhr, status, error) {
       //             console.error("AJAX Error:", error);
       //             $('#dashboardContainer').html('<p>Error loading dashboard</p>');
       //         }
       //     });
       // }


       function GetDashBoardMonitoring(event) {
        var Program = $("#ProgramID").val();
        var SubProgram = $("#SUBProgramID").val();
        var filter = $("#ViewType").val();

         // Get selected input value based on the filter
    var selectedDate = null;

    if (filter === "day") {
        selectedDate = $("#dayInput").val();
    } else if (filter === "month") {
        selectedDate = $("#monthInput").val();
    } else if (filter === "week") {
        selectedDate = $("#weekInput").val();
    }

         console.log("Selected Date: " + selectedDate);

        console.log("Program: " + Program);
        console.log("SubProgram: " + SubProgram);
        console.log("Filter: " + filter);

        $.ajax({
            url: "/Monitor/Getdashboad",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ Program: Program, SubProgram: SubProgram, filter: filter,selectedDate:selectedDate }),
            success: function (response) {
                $('#dashboardContainer').empty();

                let data = typeof response === 'string' ? JSON.parse(response) : response;

                if (!Array.isArray(data) || data.length === 0) {
                    $('#dashboardContainer').html('<p>No data found</p>');
                    return;
                }

                data.forEach(function (item, index) {
                    let callQuality = parseFloat((item["Call Quality"] || "0").replace('%', ''));
                    let monitoring = parseFloat((item["Monitoring"] || "0").replace('%', ''));
                    let feedback = parseFloat((item["Feedback"] || "0").replace('%', ''));

                    let callChartId = `callQualityChart_${index}`;
                    let monitoringChartId = `monitoringChart_${index}`;
                    let feedbackChartId = `feedbackChart_${index}`;

                    let cardsHtml = `
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center">
                                    <div id="${callChartId}"></div>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center">
                                    <div id="${monitoringChartId}"></div>

                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center">
                                    <div id="${feedbackChartId}"></div>

                                </div>
                            </div>
                        </div>
                    `;

                    $('#dashboardContainer').append(cardsHtml);

                    // Function to render radial chart based on label and value
                    function renderRadialChart(chartId, value, label) {
                        let color = "#808080"; // Default gray

                        if (label === "Call Quality") {
                            if (value > 85) color = "#00c851";        // Green
                            else if (value >= 80) color = "#ffbb33";  // Amber
                            else color = "#ff4444";                   // Red
                        } else if (label === "Monitoring") {
                            if (value >= 100) color = "#00c851";       // Green
                           else if (value >= 90 && value <= 99.9) color = "#ffbb33";  // Amber
                            else color = "#ff4444";                   // Red

                        } else if (label === "Feedback") {
                            if (value > 90) color = "#00c851";        // Green
                            else if (value >= 85) color = "#ffbb33";  // Amber
                            else color = "#ff4444";                   // Red
                        }

                        let options = {
                            chart: {
                                type: 'radialBar',
                                height: 200
                            },
                            plotOptions: {
                                radialBar: {
                                    hollow: {
                                        size: '65%',
                                    },
                                    dataLabels: {
                                        name: {
                                            show: true,
                                            fontSize: '16px',
                                            color: '#fff'
                                        },
                                        value: {
                                            show: true,
                                            fontSize: '20px',
                                            fontWeight: 600,
                                            color: '#fff',
                                            formatter: function (val) {
                                                return val.toFixed(1) + '%';
                                            }
                                        }
                                    }
                                }
                            },
                            fill: {
                                colors: [color]
                            },
                            labels: [label],
                            series: [value]
                        };

                        let chart = new ApexCharts(document.querySelector("#" + chartId), options);
                        chart.render();
                    }

                    renderRadialChart(callChartId, callQuality, "Call Quality");
                    renderRadialChart(monitoringChartId, monitoring, "Monitoring");
                    renderRadialChart(feedbackChartId, feedback, "Feedback");
                });
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", error);
                $('#dashboardContainer').html('<p>Error loading dashboard</p>');
            }
        });
    }







          document.getElementById('ViewType').addEventListener('change', function () {
        // Hide all pickers first
        document.getElementById('dayPicker').style.display = 'none';
        document.getElementById('monthPicker').style.display = 'none';
        document.getElementById('weekPicker').style.display = 'none';

        // Show the selected picker
        const value = this.value;
        if (value === 'day') {
            document.getElementById('dayPicker').style.display = 'block';
        } else if (value === 'month') {
            document.getElementById('monthPicker').style.display = 'block';
        } else if (value === 'week') {
            document.getElementById('weekPicker').style.display = 'block';
        }
    });

</script>

