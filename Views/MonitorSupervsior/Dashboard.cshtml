@model DisputeFeedbackViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var now = DateTime.Now;
}




<div class="col-md-12 my-4" id="AuditDiv">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">  </h5>
            <div class="row">


                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Program</label>
                    @Html.DropDownList("ProgramID", (List<SelectListItem>)ViewBag.Process, "Select Program", new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" })
                </div>
                <div class="form-group col-md-6">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select">
                    </select>
                </div>

                <div class="form-group col-md-4">
                    <label for="ViewType">Data View</label>
                    <select name="ViewType" id="ViewType" class="custom-select">
                        <option value="">--Select Data View--</option>
                        <option value="day">Day</option>
                        <option value="month">Month</option>
                        <option value="week">Week</option>
                    </select>
                </div>

                <div class="form-group col-md-4" id="dayPicker" style="display:none;">
                    <label for="dayInput">Select Day</label>
                    <input type="date" id="dayInput" class="form-control" />
                </div>

                <div class="form-group col-md-4" id="monthPicker" style="display:none;">
                    <label for="monthInput">Select Month</label>
                    <input type="month" id="monthInput" class="form-control" />
                </div>

                <div class="form-group col-md-4" id="weekPicker" style="display:none;">
                    <label for="weekInput">Select Week</label>
                    <input type="week" id="weekInput" class="form-control" />
                </div>



                <div class="col-md-2">
                    <div class="form-group mb-3">
                        <button id="SaveForm" class="btn btn-primary mt-4" onclick="GetDashBoard(this)">Search</button>
                    </div>

                </div>


            </div>
        </div>
    </div>
</div>
<div class="row" id="dashboardContainer"></div>


<div id="pendingClosedGraphContainer" class="row my-4"></div>

<div class="container">

    <div class="card shadow mb-4">
        <!-- Accordion 1 -->
        <div class="accordion w-100" id="accordionData1">
            <div class="card shadow">
                <div class="card-header" id="headingData1">
                    <a role="button" href="#collapseData1" data-toggle="collapse" data-target="#collapseData1" aria-expanded="false" aria-controls="collapseData1">
                        <strong>List all Monitor role Individuals</strong>
                    </a>
                </div>
                <div id="collapseData1" class="collapse" aria-labelledby="headingData1" data-parent="#accordionData1">
                    <div class="card-body">
                        <table id="m1" class="table table-bordered">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td colspan="2" class="text-center font-weight-bold">Monitoring</td>
                                    <td colspan="2" class="text-center font-weight-bold">Feedback</td>
                                    <td></td>
                                </tr>
                                <tr>
                                    <th>Team List (Based on Hierarchy)</th>
                                    <th>Target</th>
                                    <th>Actual</th>
                                    <th>Target</th>
                                    <th>Actual</th>
                                    <th>Call Quality Score</th>
                                </tr>
                            </thead>
                            <tbody id="agentPerformanceTableBody">
                                <tr>
                                    <td colspan="6" class="text-center">Loading...</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="card shadow mb-4">
        <div class="accordion w-100" id="accordion1">
            <div class="card shadow">
                <div class="card-header" id="heading1">
                    <a role="button" href="#collapse1" data-toggle="collapse" data-target="#collapse1" aria-expanded="false" aria-controls="collapse1">
                        <strong>
                            Pending Feedback Dispute
                        </strong>
                    </a>
                </div>
                <div id="collapse1" class="collapse" aria-labelledby="heading1" data-parent="#accordion1">
                    <div class="card-body">
                        <div class="card-body">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th style="display:none">Transaction ID</th>
                                        <th>Agent Name</th>
                                        <th style="display:none">TL Name</th>
                                        <th>Monitor Name</th>
                                        <th>Agent Supervisor</th>
                                        <th>Pending</th>
                                        <th>Close</th>
                                        <th>View</th>
                                    </tr>
                                </thead>
                                <tbody id="pendingFeedbackTableBody">
                                    <tr>
                                        <td colspan="5" class="text-center">Loading...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="card shadow mb-4">
        <div class="card-header accordion-header" data-target="#updateManagementGrid" style="cursor:pointer;">
            <strong class="card-title">Update</strong>
        </div>
        <div class="card-body collapse" id="updateManagementGrid">
            <table id="updateTable" class="table table-bordered">
                <thead>
                    <tr>
                        <th>Agent ID</th>
                        <th>Subject</th>
                        <th>Created BY</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.updateList != null && Model.updateList.Any())
                    {
                        @foreach (var item in Model.updateList)
                        {
                            <tr>
                                <td>@item.UserCode</td>
                                <td>@item.Subject</td>
                                <td>@item.createdby</td>
                            </tr>
                        }
                    }
                    else
                    {

                    }
                </tbody>
            </table>
        </div>
    </div>


    <div class="card shadow mb-4" >
    <div class="card-header accordion-header" data-target="#ztCasesGrid" style="cursor:pointer;">
        <strong class="card-title">ZT Pending </strong>
    </div>
    <div class="card-body collapse" id="ztCasesGrid">
        <div style="overflow-x: auto; width: 100%;">
            <table id="zt" class="table table-bordered" style="min-width: 1000px;">
                <thead>
                    <tr>
                        <th>ProgramID</th>
                        <th>SubProgramID</th>
                        <th>AgentName</th>
                        <th stye="display:none">AgentSupervisor</th>
                        <th>Raied on</th>
                        <th>ZTRaisedDate</th>
                        <th stye="display:none">TransactionDate</th>
                        <th stye="display:none">ZTClassification</th>
                        <th stye="display:none">TransactionID</th>
                        <th>View</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ZTcaseList != null && Model.ZTcaseList.Any())
                    {
                        @foreach (var item in Model.ZTcaseList)
                        {
                            <tr>
                                <td>@item.ProgramID</td>
                                <td>@item.SubProgramID</td>
                                <td>@item.AgentName</td>
                                <td stye="display:none">@item.AgentSupervsor</td>
                                <td>@item.ZTRaisedBy</td>
                                <td>@item.ZTRaisedDate</td>
                                <td stye="display:none">@item.TransactionDate</td>
                                <td stye="display:none"> @item.ZTClassification</td>
                                <td stye="display:none">@item.TransactionID</td>
                                <td>
                                    <a href="/QAManager/ZeroTolerance?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">View</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {

                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
   
    <div class="card shadow mb-4" style="display:none">
        <!-- Accordion 2 -->
        <div class="accordion w-100" id="accordionData2">
            <div class="card shadow">
                <div class="card-header" id="headingData2">
                    <a role="button" href="#collapseData2" data-toggle="collapse" data-target="#collapseData2" aria-expanded="false" aria-controls="collapseData2">
                        <strong>List all Monitor role Inidividuals</strong>
                    </a>
                </div>
                <div id="collapseData2" class="collapse" aria-labelledby="headingData2" data-parent="#accordionData2">
                    <div class="card-body">
                        <table id="m9" class="table table-bordered">
                            <thead>
                                <tr>
                                    <td></td>
                                    <td colspan="2" class="text-center font-weight-bold">Transformation Audits</td>
                                    <td colspan="2" class="text-center font-weight-bold">Hygiene & Risk Audits</td>

                                </tr>
                                <tr>
                                    <th>User Name</th>
                                    <th>Target</th>
                                    <th>Actual</th>
                                    <th>Target</th>
                                    <th>Actual</th>

                                </tr>
                            </thead>
                            <tbody id="agentPerformanceTableBodyTransaction">
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Agent To QA Survey -->
    <div class="card shadow mb-4" style="display:none">
        <div class="card-header accordion-header" data-target="#qaSurveyGrid" style="cursor:pointer;">
            <strong class="card-title">Agent To QA Survey</strong>
        </div>
        <div class="card-body collapse" id="qaSurveyGrid">
            <table id="m3" class="table table-bordered">
                <thead>
                    <tr>
                        <th>Transaction_ID</th>
                        <th>AgentID</th>
                        <th>Action</th>

                    </tr>
                </thead>
                <tbody>
                    @if (Model.AgentToQASurvey != null && Model.AgentToQASurvey.Any())
                    {
                        @foreach (var item in Model.AgentToQASurvey)
                        {
                            <tr>
                                <td>@item.Transaction_ID</td>
                                <td>@item.AgentID</td>
                                <td>
                                    <a href="/QAManager/AgentSurveyView?TransactionID=@item.Transaction_ID" class="btn btn-primary btn-sm">View</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {

                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Update Management -->
   

    <!-- Online Assessment -->
    <div class="card shadow mb-4" style="display:none">
        <div class="card-header accordion-header" data-target="#onlineAssessmentGrid" style="cursor:pointer;">
            <strong class="card-title">Online Assessment</strong>
        </div>
        <div class="card-body collapse" id="onlineAssessmentGrid">
            <table id="assessmentTable" class="table table-bordered">
                <thead>
                    <tr>
                        <th>Test Name</th>
                        <th>Test Category</th>
                        <th>Date</th>
                        <th>View</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.assmentonl != null && Model.assmentonl.Any())
                    {
                        foreach (var item in Model.assmentonl)
                        {
                            bool isExpired = false;

                            if (item.expiryType == "date" && item.expiryDate < now)
                            {
                                isExpired = true;
                            }
                            else if (item.expiryType == "hours" && item.CreatedDate.AddHours(item.expiryHours) < now)
                            {
                                isExpired = true;
                            }

                            var rowClass = isExpired ? "#ec011a" : "";

                            <tr style="background-color:@(isExpired ? "#ec011a" : "transparent")">
                                <td>@item.TestName</td>
                                <td>@item.TestCategory</td>
                                <td>@item.CreatedDate</td>
                                <td>
                                    <a href="/QAManager/AttempAssesment?TestID=@item.TestID" class="btn btn-primary btn-sm">View</a>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {

                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- ZT Cases QA Manager View -->
    <div class="card shadow mb-4" style="display:none">
        <div class="card-header accordion-header" data-target="#ztCasesGrid" style="cursor:pointer;">
            <strong class="card-title">ZT Pending</strong>
        </div>
        <div class="card-body collapse" id="ztCasesGrid">
            <div style="overflow-x: auto; width: 100%;">
                <table id="zt" class="table table-bordered" style="min-width: 1000px;">
                    <thead>
                        <tr>
                            <th>ProgramID</th>
                            <th>SubProgramID</th>
                            <th>AgentName</th>
                            <th stye="display:none">AgentSupervisor</th>
                            <th>Raied on</th>
                            <th>ZTRaisedDate</th>
                            <th stye="display:none">TransactionDate</th>
                            <th stye="display:none">ZTClassification</th>
                            <th stye="display:none">TransactionID</th>
                            <th>View</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ZTcaseList != null && Model.ZTcaseList.Any())
                        {
                            @foreach (var item in Model.ZTcaseList)
                            {
                                <tr>
                                    <td>@item.ProgramID</td>
                                    <td>@item.SubProgramID</td>
                                    <td>@item.AgentName</td>
                                    <td stye="display:none">@item.AgentSupervsor</td>
                                    <td>@item.ZTRaisedBy</td>
                                    <td >@item.ZTRaisedDate</td>
                                    <td stye="display:none">@item.TransactionDate</td>
                                    <td stye="display:none"> @item.ZTClassification</td>
                                    <td stye="display:none">@item.TransactionID</td>
                                    <td>
                                        <a href="/QAManager/ZeroTolerance?TransactionID=@item.TransactionID" class="btn btn-primary btn-sm">View</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {

                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Coaching Section -->
    <div class="card shadow mb-4">
        <div class="card-header accordion-header" data-target="#coachingGrid" style="cursor:pointer;">
            <strong class="card-title">Coaching</strong>
            <div>
                <span class="badge badge-success" style="background-color: #d4edda; color: #155724; padding: 5px 10px; border-radius: 5px;">On-Going</span>
                <span class="badge badge-warning" style="background-color: #fff3cd; color: #856404; padding: 5px 10px; border-radius: 5px;">Extended</span>
                <span class="badge badge-danger" style="background-color: #f8d7da; color: #721c24; padding: 5px 10px; border-radius: 5px;">PIP</span>
            </div>
        </div>

        <div class="card-body collapse" id="coachingGrid">
            <div style="overflow-x: auto; width: 100%;">
                <table id="co" class="table table-bordered" style="min-width: 1200px;">
                    <thead>
                        <tr>
                            <th>Agent Name</th>
                            <th>Process</th>
                            <th>SubProcess</th>
                            <th style="display:none">1st Review</th>
                            <th style="display:none">Comment 1</th>
                            <th style="display:none">2nd Review</th>
                            <th style="display:none">Comment 2</th>
                            <th style="display:none">3rd Review</th>
                            <th style="display:none">Comment 3</th>
                            <th style="display:none">4th Review</th>
                            <th style="display:none">Comment 4</th>
                            <th style="display:none">5th Review</th>
                            <th style="display:none">Comment 5</th>
                            <th style="display:none">6th Review</th>
                            <th style="display:none">Comment 6</th>
                            <th>Initieated on</th>
                            <th>Initiated by</th>
                            <th>Coaching Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ReviewDataModel != null && Model.ReviewDataModel.Any())
                        {
                            @foreach (var item in Model.ReviewDataModel)
                            {
                                string rowClass = "";
                                if (item.CoachingStatus == "PIP")
                                {
                                    rowClass = "table-danger";
                                }
                                else if (item.CoachingStatus == "Closed")
                                {
                                    rowClass = "table-success";
                                }
                                else if (item.CoachingStatus == "Extended")
                                {
                                    rowClass = "table-warning";
                                }
                                else if (item.CoachingStatus == "NotExtended")
                                {
                                    rowClass = "table-success";
                                }
                                <tr class="@rowClass">
                                    <td style="color:black">@item.AgentID</td>
                                    <td style="color:black">@item.ProcessName</td>
                                    <td style="color:black">@item.SubProcess</td>
                                    <td style="color:black;display:none">@item.FirstReview</td>
                                    <td style="color:black;display:none">@item.Comment1</td>
                                    <td style="color:black;display:none">@item.SecondReview</td>
                                    <td style="color:black;display:none">@item.Comment2</td>
                                    <td style="color:black;display:none">@item.ThirdReview</td>
                                    <td style="color:black;display:none">@item.Comment3</td>
                                    <td style="color:black;display:none">@item.FourthReview</td>
                                    <td style="color:black;display:none">@item.Comment4</td>
                                    <td style="color:black;display:none">@item.FifthReview</td>
                                    <td style="color:black;display:none">@item.Comment5</td>
                                    <td style="color:black;display:none">@item.SixReview</td>
                                    <td style="color:black;display:none">@item.Comment6</td>
                                    <td style="color:black">@item.Initieated</td>
                                    <td style="color:black">@item.Initieated</td>
                                    <td>
                                        <a href="/QAManager/SubmiteCoaching?AgentID=@item.AgentID" style="color:black; background-color: rgba(86, 86, 166, .25);" class="btn btn-primary btn-sm">View</a>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {


                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>

<!-- jQuery Script to handle accordion toggle -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('.accordion-header').click(function () {
            const target = $(this).data('target');
            $(target).slideToggle();
        });
             initDataTableIfDataExists('#m3');
    initDataTableIfDataExists('#updateTable');
    initDataTableIfDataExists('#assessmentTable');
    initDataTableIfDataExists('#zt');
    initDataTableIfDataExists('#co');
    initDataTableIfDataExists('#m9');
    });
          $("#pendingClosedGraphContainer").on("click", function () {
        $("#collapse1").slideToggle();
    });
           function initDataTableIfDataExists(selector) {
        if ($(selector).find('tbody tr').length > 0) {
            $(selector).DataTable({
                paging: true,
                pageLength: 5,
                lengthChange: false,
                searching: false,
                ordering: false
            });
        }
    }

    // Initialize only if data exists
    initDataTableIfDataExists('#m3');
    initDataTableIfDataExists('#updateTable');
    initDataTableIfDataExists('#assessmentTable');
    initDataTableIfDataExists('#zt');
    initDataTableIfDataExists('#co');
    initDataTableIfDataExists('#m9');

</script>









<script src="~/js/jquery.min.js"></script>
@await Html.PartialAsync("_MailModal")
<script src="~/js/xlsx.full.min.js"></script>

<script src="~/js/notification.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script>


           function GetDashBoard(event) {
        var Program = $("#ProgramID").val();
        var SubProgram = $("#SUBProgramID").val();
        var filter = $("#ViewType").val();
        if(filter =="")
            {
                    Swal.fire({
              title: "Select Data View!",
              icon: "info",
          draggable: true
        });

        }
        $.ajax({
            url: "/QAManager/Getdashboad",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ Program: Program, SubProgram: SubProgram, filter: filter }),
            success: function (response) {
                $('#dashboardContainer').empty();

                let data = response.dashboardData;
                let pendingCount = response.pendingCount;
                let closedCount = response.closedCount;
                    let baseList = response.baseList;
                console.log(response.baseListTransaction);

        const tableBody23 = document.getElementById("agentPerformanceTableBodyTransaction");
               tableBody23.innerHTML = "";

               console.log(JSON.stringify(response.baseListTransaction));

       response.baseListTransaction.forEach(row => {
           const tr23 = document.createElement("tr");
           tr23.innerHTML = `
               <td>${row.UserName}</td>

               <td>${row.Target}</td>
               <td>${row.Transaformation}</td>
                   <td>${row.Target}</td>
               <td>${row.Hygiene}</td>


           `;
           tableBody23.appendChild(tr23);
       });

        let monitordash = response.monitoerows;

    console.log(JSON.stringify(monitordash));
             const tableBody = document.getElementById("agentPerformanceTableBody");
            tableBody.innerHTML = "";



    monitordash.forEach(row => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
            <td>${row.UserName}</td>

            <td>${row.Target}</td>
            <td>${row.Actual}</td>
                <td>${row.Target}</td>
            <td>${row.AgentAckno}</td>
            <td>${row.CQScore}</td>
        `;
        tableBody.appendChild(tr);
    });
    const tableId1 = '#m1';
       if ($.fn.DataTable.isDataTable(tableId1)) {
            $(tableId1).DataTable().clear().destroy();
        }
    $(tableId1).DataTable({
              paging: true,
              pageLength: 5,
              lengthChange: false,
              searching: false,
              ordering: false
          });
        let tableBodyHtml = '';

        if (!Array.isArray(baseList) || baseList.length === 0) {
            tableBodyHtml = '<tr><td colspan="5" class="text-center">No pending feedback.</td></tr>';
        } else {
            baseList.forEach(function(item) {
                tableBodyHtml += `
                    <tr>
                        <td  style="display:none">${item.transactionID}</td>
                        <td>${item.agentID}</td>
                        <td style="display:none">${item.tlName}</td>
                        <td>${item.monitorBy}</td>
                          <td>${item.monitorBy}</td>
                             <td>${item.Pending}</td>
                            <td>${item.Close}</td>
                             
                        <td>
                            <a href="/QAManager/EditAgentFeedBack?TransactionID=${item.transactionID}"
                                class="btn btn-primary btn-sm" style="border:white" title="View">
                                <i class="fa fa-eye"></i>
                            </a>
                        </td>
                    </tr>
                `;
            });
        }

        $('#pendingFeedbackTableBody').html(tableBodyHtml);
                if (!Array.isArray(data) || data.length === 0) {
                    $('#dashboardContainer').html('<p>No data found</p>');
                    return;
                }

                data.forEach(function (item, index) {
                    let callQuality = parseFloat((item["Call Quality"] || "0").replace('%', ''));
                    let monitoring = parseFloat((item["Monitoring"] || "0").replace('%', ''));
                    let feedback = parseFloat((item["Feedback"] || "0").replace('%', ''));

                    let callChartId = `callQualityChart_${index}`;
                    let monitoringChartId = `monitoringChart_${index}`;
                    let feedbackChartId = `feedbackChart_${index}`;

                    let cardsHtml = `
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center">
                                       <div  style="color: white" id="${callChartId}"></div>
                                    <div class="mt-3"><strong>Date:</strong> ${item["Period"]}</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center">
                                    <div  style="color: white" id="${monitoringChartId}"></div>
                                    <div class="mt-3"><strong>Monitoring:</strong> ${item["Monitoring"]}</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 my-4">
                            <div class="card shadow">
                                <div class="card-body text-center" style="color: white">
                                    <div style="color: white"  id="${feedbackChartId}"></div>
                                    <div class="mt-3"><strong>Feedback:</strong> ${item["Feedback"]}</div>
                                </div>
                            </div>
                        </div>
                    `;
                    $('#dashboardContainer').append(cardsHtml);


        $('#pendingFeedbackTableBody').html(tableBodyHtml);

                      function renderRadialChart(chartId, value, label, isCallQuality) {
        const strokeRadialOptions = {
            chart: {
                height: 185,
                type: "radialBar",
                offsetY: -10
            },
            plotOptions: {
                radialBar: {
                    startAngle: -135,
                    endAngle: 125,
                    track: {
                        background: "#e7e7e7"
                    },
                    dataLabels: {
                        name: {
                            fontSize: "12px",
                            color: "white",
                            offsetY: 90,
                            fontFamily: "Arial, sans-serif",
                            fontWeight: 400
                        },
                        value: {
                            offsetY: 56,
                            fontSize: "20px",
                            fontWeight: 700,
                            color: "white",
                            fontFamily: "Arial, sans-serif",
                            formatter: function (val) {
                                return val + "%";
                            }
                        }
                    }
                }
            },
            fill: {
                type: "gradient",
                gradient: {
                    shade: "light",
                    type: "horizontal",
                    shadeIntensity: 0.3,
                    inverseColors: false,
                    opacityFrom: 0.3,
                    opacityTo: 1,
                    stops: [0, 100]
                }
            },
            stroke: {
                dashArray: 0
            },
            labels: ["Metric"]
        };

        let options = JSON.parse(JSON.stringify(strokeRadialOptions));
        options.series = [value];
        options.labels = [label];

        // 🌈 Dynamic color logic for gradient and base
        if (value > 85) {
            options.colors = ['#03F93D']; // green
            options.fill.gradient.gradientToColors = ['#027c25']; // darker green
        } else if (value >= 80 && value <= 84.9) {
            options.colors = ['#F9E103']; // yellow
            options.fill.gradient.gradientToColors = ['#b89c00']; // darker yellow
        } else {
            options.colors = ['#F95103']; // red
            options.fill.gradient.gradientToColors = ['#7e2601']; // darker red
        }

        let chart = new ApexCharts(document.querySelector("#" + chartId), options);
        chart.render();
    }

                    renderRadialChart(callChartId, callQuality, "Call Quality", true);
                    renderRadialChart(monitoringChartId, monitoring, "Monitoring", false);
                    renderRadialChart(feedbackChartId, feedback, "Feedback", false);
                });

                // Render Pending vs Closed Dispute Graph in separate container
                renderPendingClosedChart(pendingCount, closedCount);
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", error);
                $('#dashboardContainer').html('<p>No Data available on dashboard</p>');
            }
        });
        }



            function renderPendingClosedChart(pending, closed) {
            $('#pendingClosedGraphContainer').empty();

            let total = pending + closed;
            let pendingPercent = total === 0 ? 0 : (pending / total) * 100;
            let closedPercent = total === 0 ? 0 : (closed / total) * 100;

            let pendingCard = `
                <div class="col-md-6 my-2">
                    <div class="card shadow text-center text-white pending-card"
                         style="height: 200px; display: flex; align-items: center; justify-content: center;  cursor: pointer;">
                        <div>
                            <h5>Pending Disputes</h5>
                            <div id="pendingRadial" style="width:140px; margin:0 auto;"></div>
                        </div>
                    </div>
                </div>
            `;

            let closedCard = `
                <div class="col-md-6 my-2">
                    <div class="card shadow text-center text-white closed-card"
                         style="height: 200px; display: flex; align-items: center; justify-content: center;">
                        <div>
                            <h5>Closed Disputes</h5>
                            <div id="closedRadial" style="width:140px; margin:0 auto;"></div>
                        </div>
                    </div>
                </div>
            `;

            $('#pendingClosedGraphContainer').append(pendingCard);
            $('#pendingClosedGraphContainer').append(closedCard);

            // Toggle accordion when pending card is clicked

            // Radial Progress for Pending
            var pendingOptions = {
                series: [pendingPercent],
                chart: { height: 150, type: 'radialBar' },
                plotOptions: {
                    radialBar: {
                        hollow: { size: '60%' },
                        track: { strokeWidth: '80%' },
                        dataLabels: {
                            show: true,
                            name: { show: false },
                            value: {
                                show: true,
                                fontSize: '22px',
                                color: '#fff',
                                offsetY: 5,
                                formatter: function() { return pending; }
                            }
                        }
                    }
                },
                colors: ['#FFA500'],
                labels: ['Pending']
            };

            var pendingChart = new ApexCharts(document.querySelector("#pendingRadial"), pendingOptions);
            pendingChart.render();

            // Radial Progress for Closed
            var closedOptions = {
                series: [closedPercent],
                chart: { height: 150, type: 'radialBar' },
                plotOptions: {
                    radialBar: {
                        hollow: { size: '60%' },
                        track: { strokeWidth: '80%' },
                        dataLabels: {
                            show: true,
                            name: { show: false },
                            value: {
                                show: true,
                                fontSize: '22px',
                                color: '#fff',
                                offsetY: 5,
                                formatter: function() { return closed; }
                            }
                        }
                    }
                },
                colors: ['#008000'],
                labels: ['Closed']
            };

            var closedChart = new ApexCharts(document.querySelector("#closedRadial"), closedOptions);
            closedChart.render();
        }

         function onProgramChange() {
            var programId = document.getElementById("ProgramID").value;


            if (programId == "") {
                alert("Please Select Program first");
                return;
            }
            $.ajax({
                type: "POST",
                data: JSON.stringify({ id: programId }),

                url: "/Admin/GetSUBProcessList",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    var dropdown = $('#SUBProgramID');
                    dropdown.empty();
                    dropdown.append('<option value="">Select Sub Process</option>');
                     dropdown.append('<option value="ALL">' + "ALL" + '</option>');
                    response.proces.forEach(function (item) {
                        dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                    });
                },
                error: function (xhr, status, error) {

                }
            });




        }


          document.getElementById('ViewType').addEventListener('change', function () {
        // Hide all pickers first
        document.getElementById('dayPicker').style.display = 'none';
        document.getElementById('monthPicker').style.display = 'none';
        document.getElementById('weekPicker').style.display = 'none';

        // Show the selected picker
        const value = this.value;
        if (value === 'day') {
            document.getElementById('dayPicker').style.display = 'block';
        } else if (value === 'month') {
            document.getElementById('monthPicker').style.display = 'block';
        } else if (value === 'week') {
            document.getElementById('weekPicker').style.display = 'block';
        }
    });

</script>