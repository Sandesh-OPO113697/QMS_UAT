@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-md-12 my-4">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title">  </h5>
            <div class="row">
                <div class="form-group col-md-6">
                    <label for="ProgramID">Audit Type</label>
                    @Html.DropDownList("AuditID", (List<SelectListItem>)ViewBag.AuditTypeList, "Select AditType", new { @class = "custom-select", id = "AuditID" })
                </div>

                <div class="form-group col-md-6">
                    <label for="ProgramID">Select Program</label>
                    @Html.DropDownList("ProgramID", (List<SelectListItem>)ViewBag.Process, "Select Program", new { @class = "custom-select", id = "ProgramID", onchange = "onProgramChange()" })
                </div>
                <div class="form-group col-md-6">
                    <label for="SUBProgramID">Sub Program Name</label>
                    <select name="SUBProgramID" id="SUBProgramID" class="custom-select" onchange="onSubProgramChange()">
                    </select>
                </div>

                <div class="form-group col-md-6">
                    <label for="dispositionId">Disposition</label>
                    <select name="dispositionId" id="dispositionId" class="custom-select" onchange="onDispositionChange()">
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label for="SubDispositionID">Sub Disposition</label>
                    <select name="SubDispositionID" id="SubDispositionID" class="custom-select">
                    </select>
                </div>


            </div>
        </div>
    </div>
</div>




<div class="col-md-12 my-4">
    <div class="card shadow">
        <div class="card-body">
            <h5 class="card-title"> Search Recording </h5>
            <div class="row">

                <div class="form-group col-md-6">

                    <label for="date-input1">From Date</label>
                    <div class="input-group">
                        <input type="text" class="form-control drgpicker" id="FromDate" value="09/09/1999" aria-describedby="button-addon2">
                        <div class="input-group-append">
                            <div class="input-group-text" id="button-addon-date"><span class="fe fe-calendar fe-16"></span></div>
                        </div>
                    </div>

                </div>
                <div class="form-group col-md-6">
                    <label for="date-input1">To Date </label>
                    <div class="input-group">
                        <input type="text" class="form-control drgpicker" id="Todate" value="09/09/1999" aria-describedby="button-addon2">
                        <div class="input-group-append">
                            <div class="input-group-text" id="button-addon-date"><span class="fe fe-calendar fe-16"></span></div>
                        </div>
                    </div>

                </div>

                <div class="form-group col-md-6">
                    <label for="AgentID">Agent Name</label>
                    <select name="AgentID" id="AgentID" class="custom-select" onchange="onAgentIDChange()">
                    </select>
                </div>

                <div class="form-group col-md-6">
                    <label for="TL_id">TL Name</label>
                    <input type="text" placeholder="TL Name" class="custom-select" id="TL_id" />
                </div>

            </div>
        </div>
    </div>
</div>



<div id="recordingContainer"></div>

<div class="col-md-12 my-4" id="RelListDiv" style="display:none">
    <div class="card shadow">
        <div class="container-fluid">
            <div class="row justify-content-center">
                <table class="table table-bordered ">
                    <thead>
                        <tr>
                            <th></th>
                            <th class="w-50">Agent ID</th>

                            <th class="w-50">Conn ID</th>
                            <th>C-Path</th>
                        </tr>
                    </thead>
                    <tbody id="recTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="card shadow mb-4" id="SectionGried">
    <div class="card-header">
        <strong class="card-title"> Section</strong>

    </div>
    <div class="card-body">

        <table id="sectionGrid" class="table table-bordered">
            <thead>
                <tr>

                    <th>Category</th>
                    <th>Level</th>
                    <th>Section Name</th>
                    <th>QA Rating</th>
                    <th>Scorable</th>

                    <th>Weightage</th>
                    <th>Comments Section</th>

                    

                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>

    </div>
</div>
<script>


    document.addEventListener("click", function (event) {
        let target = event.target;
        if (target.classList.contains("play-audio")) {
            document.querySelectorAll(".play-audio").forEach(el => el.style.color = "gray");
            target.style.color = "#03FD03";
            target.style.setProperty("color", "#03FD03", "important");

            var audioPath = target.getAttribute("data-path");

            $.ajax({
                type: "POST",
                data: JSON.stringify({ id: audioPath }),
                url: "/Monitor/GetRecording",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        let container = document.getElementById("recordingContainer");
                        container.innerHTML = "";
                        let byteCharacters = atob(response.audioData);
                        let byteNumbers = new Array(byteCharacters.length);
                        for (let i = 0; i < byteCharacters.length; i++) {
                            byteNumbers[i] = byteCharacters.charCodeAt(i);
                        }
                        let byteArray = new Uint8Array(byteNumbers);
                        let blob = new Blob([byteArray], { type: "audio/mpeg" });
                        let audioUrl = URL.createObjectURL(blob);

                        let audioPlayer = document.createElement("audio");
                        audioPlayer.controls = true;
                        audioPlayer.src = audioUrl;
                        audioPlayer.autoplay = true;
                        audioPlayer.style.width = "100%";
                        container.appendChild(audioPlayer);
                    } else {
                        console.error("Error: " + response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
    });



</script>
<script>
        function clearFields() {
        $("#SUBProgramID").empty().append('<option value="">Select Sub Program</option>');
        $("#dispositionId").empty().append('<option value="">Select Disposition</option>');
        $("#SubDispositionID").empty().append('<option value="">Select Sub Disposition</option>');
        $("#AgentID").empty().append('<option value="">Select Agent</option>');
        $("#TL_id").val("");
        $("#RelListDiv").hide();
    }

        function clearFieldsSubProcesssChange() {

        $("#dispositionId").empty().append('<option value="">Select Disposition</option>');
        $("#SubDispositionID").empty().append('<option value="">Select Sub Disposition</option>');
        $("#AgentID").empty().append('<option value="">Select Agent</option>');
        $("#TL_id").val("");
        $("#RelListDiv").hide();
    }
    function onProgramChange() {
           var programId = document.getElementById("ProgramID").value;


           if (programId == "") {
               alert("Please Select Program first");
               return;
           }
           $.ajax({
               type: "POST",
               data: JSON.stringify({ id: programId }),

               url: "/Admin/GetSUBProcessList",
               contentType: "application/json; charset=utf-8",
               dataType: "json",
               success: function (response) {

                   var dropdown = $('#SUBProgramID');
                   dropdown.empty();
                   dropdown.append('<option value="">Select Sub Process</option>');
                   response.proces.forEach(function (item) {
                       dropdown.append('<option value="' + item.value + '">' + item.text.split(',')[0] + '</option>');
                   });
               },
               error: function (xhr, status, error) {
                   console.error("Error occurred: " + error);
               }
           });


           clearFields();

       }


        function onAgentIDChange() {

             var fromDate = $("#FromDate").val();
                var toDate = $("#Todate").val();
                var agentId = $("#AgentID").val();

                if (!fromDate || fromDate === "09/09/1999") {
                    alert("Please select From Date. And To Date");
                    return;
                }
                if (!toDate || toDate === "09/09/1999") {
                    alert("Please select From Date And To Date.");
                    return;
                }
                if (!agentId) {
                    alert("Please select an Agent.");
                    return;
                }
           var programId = document.getElementById("AgentID").value;


           if (programId == "") {
               alert("Please Select Agent first");
               return;
           }
           $.ajax({
               type: "POST",
               data: JSON.stringify({ id: programId }),

               url: "/Monitor/GetTLName",
               contentType: "application/json; charset=utf-8",
               dataType: "json",
               success: function (response) {
                if (response.success) {
                    $("#TL_id").val(response.tl_name);  // Corrected this line
                } else {
                    alert("Error fetching TL Name.");
                    $("#RelListDiv").hide();
                }
               },
               error: function (xhr, status, error) {
                   console.error("Error occurred: " + error);
               }
           });

           $("#RelListDiv").show();
           $.ajax({
                    type: "POST",
                    data: JSON.stringify({ fromDate: fromDate, toDate: toDate, agentId: agentId }),
                    url: "/Monitor/GetRecListBydate",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {

                             let recList = JSON.parse(response.reclist);


                              var tableBody = document.getElementById("recTableBody");

                                recList.forEach(function (rec) {
                                    var row = `<tr>
                                        <td class="text-center">
                                            <div >
                                             <span class="fe fe-24 fe-headphones play-audio" style="color: gray;" data-path="${rec.CONNID}"></span>

                                            </div>

                                        </td>
                                        <td class="text-muted">${rec.AgentId}</td>
                                         <td class="text-muted">${rec.CONNID}</td>

                                        <td class="text-muted">${rec.CPath}</td>
                                    </tr>`;

                                    tableBody.innerHTML += row;
                                });
                        } else {
                            alert("Error processing date range.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred: " + error);
                    }
                });
                GetSectionGried();

       }
        function populateGrid(data) {
        var tableBody = $("#sectionGrid tbody");
        tableBody.empty();
        if (data.length === 0) {
            tableBody.append("<tr><td colspan='10' class='text-center'>No records found</td></tr>");
            return;
        }

                    $.each(data, function (index, item) {
                        var row = `<tr>
                        <td>${item.category}</td>
                        <td>${item.level}</td>
                        <td>${item.sectionName}</td>
                        <td>
                            <select class="qa-rating form-control" data-index="${index}">
                             <option value="">Select Rating</option>
                                <option value="Met">Met</option>
                                <option value="Not Met">Not Met</option>
                            </select>
                        </td>
                        <td>${item.scorable}</td>
                        <td class="score-col">${item.score}</td>
                          <td><input type="text" class="form-control" id="Comments_Section" placeholder="Enter Comments Section"></td>
                    </tr>`;

                        tableBody.append(row);
                    });
                       var footerRow = `<tr>
        <td colspan="5" class="text-right font-weight-bold">CQ Scores:</td>
        <td id="totalScore" class="font-weight-bold">0</td>
    </tr>`;

    tableBody.append(footerRow);

         $(".qa-rating").on("change", function () {
        var selectedValue = $(this).val();
        var rowIndex = $(this).data("index");
        var scoreCell = $(this).closest("tr").find(".score-col");

        if (selectedValue === "Met") {
            scoreCell.text(data[rowIndex].score);
        } else {
            scoreCell.text(0);
        }
        calculateTotalScore();
    });
    calculateTotalScore();
    }

     function calculateTotalScore() {
        let total = 0;
        $(".score-col").each(function () {
            total += parseInt($(this).text()) || 0;
        });
        $("#totalScore").text(total);
    }

       function GetSectionGried()
       {
           var selectedValue = document.getElementById("SUBProgramID").value;
            $.ajax({
                type: "POST",
                url: "/ManageForm/GetSectionGried",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ SUBProcessID: selectedValue, ProcessID: $('#ProgramID').val() }),
                success: function (response) {
                  console.log(JSON.stringify(response));
                    populateGrid(response.sectionGrid);
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
       }
    function onSubProgramChange() {

        var selectedValue = document.getElementById("SUBProgramID").value;

        if (selectedValue === '') {
            alert('Please select a valid Sub Program Name.');
         return;
        } else {
            console.log("Selected Sub Program ID:", selectedValue);


            $.ajax({
                type: "POST",
                url: "/Monitor/GetDispositoin",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ SUBProcessID: selectedValue, ProcessID: $('#ProgramID').val() }),
                success: function (response) {
                  var dropdown = $('#dispositionId');
                    dropdown.empty();
                    dropdown.append('<option value="">Select Disposition</option>');

                    console.log(JSON.stringify(response)); // Debugging

                    // Ensure we use the correct response property
                    if (response.success && response.samplesize) {
                        response.samplesize.forEach(function (item) {
                            dropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                     }


                      var dropdown = $('#AgentID');
                    dropdown.empty();
                    dropdown.append('<option value="">Select Agent Name</option>');

                    console.log(JSON.stringify(response)); // Debugging

                    // Ensure we use the correct response property
                    if (response.success && response.agentlist) {
                        response.agentlist.forEach(function (item) {
                            dropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                     }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
        clearFieldsSubProcesssChange();
    }



    function onDispositionChange() {

        var selectedValue = document.getElementById("SUBProgramID").value;
        var Disposition = document.getElementById("dispositionId").value;

        if (Disposition === '') {
            alert('Please select a valid Disposition Name.');
      return;
        } else {
            console.log("Selected Sub Program ID:", selectedValue);


            $.ajax({
                type: "POST",
                url: "/Monitor/GetSubDispositoin",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify({ SUBProcessID: selectedValue, ProcessID: $('#ProgramID').val()  ,Disposition:Disposition}),
                success: function (response) {
                  var dropdown = $('#SubDispositionID');
                    dropdown.empty();
                    dropdown.append('<option value="">Select Sub Disposition</option>');

                    console.log(JSON.stringify(response));
                    if (response.success && response.samplesize) {
                        response.samplesize.forEach(function (item) {
                            dropdown.append('<option value="' + item.value + '">' + item.text + '</option>');
                        });
                     }
                },
                error: function (xhr, status, error) {
                    console.error("Error occurred: " + error);
                }
            });
        }
    }
</script>